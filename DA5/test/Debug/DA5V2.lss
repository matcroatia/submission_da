
DA5V2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000196  00800100  00000fac  00001040  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003f  00800296  00800296  000011d6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011d6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001234  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00001274  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b85  00000000  00000000  0000138c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c4d  00000000  00000000  00002f11  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b9c  00000000  00000000  00003b5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000290  00000000  00000000  000046fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000619  00000000  00000000  0000498c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000097f  00000000  00000000  00004fa5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00005924  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 e6 02 	jmp	0x5cc	; 0x5cc <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ea       	ldi	r30, 0xAC	; 172
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 39       	cpi	r26, 0x96	; 150
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a6 e9       	ldi	r26, 0x96	; 150
  8e:	b2 e0       	ldi	r27, 0x02	; 2
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a5 3d       	cpi	r26, 0xD5	; 213
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <main>
  9e:	0c 94 d4 07 	jmp	0xfa8	; 0xfa8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <nrf24_send_spi>:
{
	uint8_t config_register;
	nrf24_read(FIFO_STATUS,&config_register,1);
	if (!(config_register & (1 << RX_EMPTY))) return 1;
	return 0;
}
  a6:	df 92       	push	r13
  a8:	ef 92       	push	r14
  aa:	ff 92       	push	r15
  ac:	0f 93       	push	r16
  ae:	1f 93       	push	r17
  b0:	cf 93       	push	r28
  b2:	df 93       	push	r29
  b4:	7b 01       	movw	r14, r22
  b6:	8a 01       	movw	r16, r20
  b8:	2a 98       	cbi	0x05, 2	; 5
  ba:	0e 94 b2 02 	call	0x564	; 0x564 <spi_exchange>
  be:	d8 2e       	mov	r13, r24
  c0:	01 15       	cp	r16, r1
  c2:	11 05       	cpc	r17, r1
  c4:	51 f0       	breq	.+20     	; 0xda <nrf24_send_spi+0x34>
  c6:	e7 01       	movw	r28, r14
  c8:	0e 0d       	add	r16, r14
  ca:	1f 1d       	adc	r17, r15
  cc:	88 81       	ld	r24, Y
  ce:	0e 94 b2 02 	call	0x564	; 0x564 <spi_exchange>
  d2:	89 93       	st	Y+, r24
  d4:	c0 17       	cp	r28, r16
  d6:	d1 07       	cpc	r29, r17
  d8:	c9 f7       	brne	.-14     	; 0xcc <nrf24_send_spi+0x26>
  da:	2a 9a       	sbi	0x05, 2	; 5
  dc:	8d 2d       	mov	r24, r13
  de:	df 91       	pop	r29
  e0:	cf 91       	pop	r28
  e2:	1f 91       	pop	r17
  e4:	0f 91       	pop	r16
  e6:	ff 90       	pop	r15
  e8:	ef 90       	pop	r14
  ea:	df 90       	pop	r13
  ec:	08 95       	ret

000000ee <nrf24_write>:
  ee:	80 62       	ori	r24, 0x20	; 32
  f0:	0e 94 53 00 	call	0xa6	; 0xa6 <nrf24_send_spi>
  f4:	08 95       	ret

000000f6 <nrf24_read>:
  f6:	0e 94 53 00 	call	0xa6	; 0xa6 <nrf24_send_spi>
  fa:	08 95       	ret

000000fc <nrf24_init>:
  fc:	0f 93       	push	r16
  fe:	1f 93       	push	r17
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	1f 92       	push	r1
 106:	cd b7       	in	r28, 0x3d	; 61
 108:	de b7       	in	r29, 0x3e	; 62
 10a:	f8 94       	cli
 10c:	e9 e6       	ldi	r30, 0x69	; 105
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	82 60       	ori	r24, 0x02	; 2
 114:	80 83       	st	Z, r24
 116:	e8 9a       	sbi	0x1d, 0	; 29
 118:	78 94       	sei
 11a:	21 9a       	sbi	0x04, 1	; 4
 11c:	22 9a       	sbi	0x04, 2	; 4
 11e:	2a 9a       	sbi	0x05, 2	; 5
 120:	29 98       	cbi	0x05, 1	; 5
 122:	0e 94 a3 02 	call	0x546	; 0x546 <spi_master_init>
 126:	2f ef       	ldi	r18, 0xFF	; 255
 128:	81 ee       	ldi	r24, 0xE1	; 225
 12a:	94 e0       	ldi	r25, 0x04	; 4
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <nrf24_init+0x30>
 134:	00 c0       	rjmp	.+0      	; 0x136 <nrf24_init+0x3a>
 136:	00 00       	nop
 138:	0f e3       	ldi	r16, 0x3F	; 63
 13a:	00 93 b8 02 	sts	0x02B8, r16	; 0x8002b8 <data>
 13e:	41 e0       	ldi	r20, 0x01	; 1
 140:	50 e0       	ldi	r21, 0x00	; 0
 142:	68 eb       	ldi	r22, 0xB8	; 184
 144:	72 e0       	ldi	r23, 0x02	; 2
 146:	80 e0       	ldi	r24, 0x00	; 0
 148:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 14c:	10 92 b8 02 	sts	0x02B8, r1	; 0x8002b8 <data>
 150:	41 e0       	ldi	r20, 0x01	; 1
 152:	50 e0       	ldi	r21, 0x00	; 0
 154:	68 eb       	ldi	r22, 0xB8	; 184
 156:	72 e0       	ldi	r23, 0x02	; 2
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 15e:	80 ef       	ldi	r24, 0xF0	; 240
 160:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
 164:	41 e0       	ldi	r20, 0x01	; 1
 166:	50 e0       	ldi	r21, 0x00	; 0
 168:	68 eb       	ldi	r22, 0xB8	; 184
 16a:	72 e0       	ldi	r23, 0x02	; 2
 16c:	84 e0       	ldi	r24, 0x04	; 4
 16e:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 172:	10 92 b8 02 	sts	0x02B8, r1	; 0x8002b8 <data>
 176:	41 e0       	ldi	r20, 0x01	; 1
 178:	50 e0       	ldi	r21, 0x00	; 0
 17a:	68 eb       	ldi	r22, 0xB8	; 184
 17c:	72 e0       	ldi	r23, 0x02	; 2
 17e:	82 e0       	ldi	r24, 0x02	; 2
 180:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 184:	84 e7       	ldi	r24, 0x74	; 116
 186:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
 18a:	41 e0       	ldi	r20, 0x01	; 1
 18c:	50 e0       	ldi	r21, 0x00	; 0
 18e:	68 eb       	ldi	r22, 0xB8	; 184
 190:	72 e0       	ldi	r23, 0x02	; 2
 192:	85 e0       	ldi	r24, 0x05	; 5
 194:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 198:	8e e0       	ldi	r24, 0x0E	; 14
 19a:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
 19e:	41 e0       	ldi	r20, 0x01	; 1
 1a0:	50 e0       	ldi	r21, 0x00	; 0
 1a2:	68 eb       	ldi	r22, 0xB8	; 184
 1a4:	72 e0       	ldi	r23, 0x02	; 2
 1a6:	86 e0       	ldi	r24, 0x06	; 6
 1a8:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 1ac:	10 e7       	ldi	r17, 0x70	; 112
 1ae:	10 93 b8 02 	sts	0x02B8, r17	; 0x8002b8 <data>
 1b2:	41 e0       	ldi	r20, 0x01	; 1
 1b4:	50 e0       	ldi	r21, 0x00	; 0
 1b6:	68 eb       	ldi	r22, 0xB8	; 184
 1b8:	72 e0       	ldi	r23, 0x02	; 2
 1ba:	87 e0       	ldi	r24, 0x07	; 7
 1bc:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 1c0:	00 93 b8 02 	sts	0x02B8, r16	; 0x8002b8 <data>
 1c4:	41 e0       	ldi	r20, 0x01	; 1
 1c6:	50 e0       	ldi	r21, 0x00	; 0
 1c8:	68 eb       	ldi	r22, 0xB8	; 184
 1ca:	72 e0       	ldi	r23, 0x02	; 2
 1cc:	8c e1       	ldi	r24, 0x1C	; 28
 1ce:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 1d2:	84 e0       	ldi	r24, 0x04	; 4
 1d4:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
 1d8:	41 e0       	ldi	r20, 0x01	; 1
 1da:	50 e0       	ldi	r21, 0x00	; 0
 1dc:	68 eb       	ldi	r22, 0xB8	; 184
 1de:	72 e0       	ldi	r23, 0x02	; 2
 1e0:	8d e1       	ldi	r24, 0x1D	; 29
 1e2:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 1e6:	19 83       	std	Y+1, r17	; 0x01
 1e8:	40 e0       	ldi	r20, 0x00	; 0
 1ea:	50 e0       	ldi	r21, 0x00	; 0
 1ec:	60 e0       	ldi	r22, 0x00	; 0
 1ee:	70 e0       	ldi	r23, 0x00	; 0
 1f0:	82 ee       	ldi	r24, 0xE2	; 226
 1f2:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 1f6:	40 e0       	ldi	r20, 0x00	; 0
 1f8:	50 e0       	ldi	r21, 0x00	; 0
 1fa:	60 e0       	ldi	r22, 0x00	; 0
 1fc:	70 e0       	ldi	r23, 0x00	; 0
 1fe:	81 ee       	ldi	r24, 0xE1	; 225
 200:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 204:	45 e0       	ldi	r20, 0x05	; 5
 206:	50 e0       	ldi	r21, 0x00	; 0
 208:	65 e0       	ldi	r22, 0x05	; 5
 20a:	71 e0       	ldi	r23, 0x01	; 1
 20c:	8a e0       	ldi	r24, 0x0A	; 10
 20e:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 212:	45 e0       	ldi	r20, 0x05	; 5
 214:	50 e0       	ldi	r21, 0x00	; 0
 216:	60 e0       	ldi	r22, 0x00	; 0
 218:	71 e0       	ldi	r23, 0x01	; 1
 21a:	80 e1       	ldi	r24, 0x10	; 16
 21c:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 220:	41 e0       	ldi	r20, 0x01	; 1
 222:	50 e0       	ldi	r21, 0x00	; 0
 224:	be 01       	movw	r22, r28
 226:	6f 5f       	subi	r22, 0xFF	; 255
 228:	7f 4f       	sbci	r23, 0xFF	; 255
 22a:	82 e0       	ldi	r24, 0x02	; 2
 22c:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 230:	89 81       	ldd	r24, Y+1	; 0x01
 232:	81 60       	ori	r24, 0x01	; 1
 234:	89 83       	std	Y+1, r24	; 0x01
 236:	41 e0       	ldi	r20, 0x01	; 1
 238:	50 e0       	ldi	r21, 0x00	; 0
 23a:	be 01       	movw	r22, r28
 23c:	6f 5f       	subi	r22, 0xFF	; 255
 23e:	7f 4f       	sbci	r23, 0xFF	; 255
 240:	82 e0       	ldi	r24, 0x02	; 2
 242:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 246:	0f 90       	pop	r0
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	0f 91       	pop	r16
 250:	08 95       	ret

00000252 <nrf24_state>:
 252:	1f 93       	push	r17
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	1f 92       	push	r1
 25a:	cd b7       	in	r28, 0x3d	; 61
 25c:	de b7       	in	r29, 0x3e	; 62
 25e:	18 2f       	mov	r17, r24
 260:	41 e0       	ldi	r20, 0x01	; 1
 262:	50 e0       	ldi	r21, 0x00	; 0
 264:	be 01       	movw	r22, r28
 266:	6f 5f       	subi	r22, 0xFF	; 255
 268:	7f 4f       	sbci	r23, 0xFF	; 255
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
 270:	13 30       	cpi	r17, 0x03	; 3
 272:	71 f1       	breq	.+92     	; 0x2d0 <nrf24_state+0x7e>
 274:	28 f4       	brcc	.+10     	; 0x280 <nrf24_state+0x2e>
 276:	11 30       	cpi	r17, 0x01	; 1
 278:	59 f0       	breq	.+22     	; 0x290 <nrf24_state+0x3e>
 27a:	12 30       	cpi	r17, 0x02	; 2
 27c:	e9 f0       	breq	.+58     	; 0x2b8 <nrf24_state+0x66>
 27e:	5e c0       	rjmp	.+188    	; 0x33c <nrf24_state+0xea>
 280:	15 30       	cpi	r17, 0x05	; 5
 282:	09 f4       	brne	.+2      	; 0x286 <nrf24_state+0x34>
 284:	47 c0       	rjmp	.+142    	; 0x314 <nrf24_state+0xc2>
 286:	d0 f1       	brcs	.+116    	; 0x2fc <nrf24_state+0xaa>
 288:	16 30       	cpi	r17, 0x06	; 6
 28a:	09 f4       	brne	.+2      	; 0x28e <nrf24_state+0x3c>
 28c:	45 c0       	rjmp	.+138    	; 0x318 <nrf24_state+0xc6>
 28e:	56 c0       	rjmp	.+172    	; 0x33c <nrf24_state+0xea>
 290:	89 81       	ldd	r24, Y+1	; 0x01
 292:	81 fd       	sbrc	r24, 1
 294:	53 c0       	rjmp	.+166    	; 0x33c <nrf24_state+0xea>
 296:	82 60       	ori	r24, 0x02	; 2
 298:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
 29c:	41 e0       	ldi	r20, 0x01	; 1
 29e:	50 e0       	ldi	r21, 0x00	; 0
 2a0:	68 eb       	ldi	r22, 0xB8	; 184
 2a2:	72 e0       	ldi	r23, 0x02	; 2
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 2aa:	8f e3       	ldi	r24, 0x3F	; 63
 2ac:	9f e1       	ldi	r25, 0x1F	; 31
 2ae:	01 97       	sbiw	r24, 0x01	; 1
 2b0:	f1 f7       	brne	.-4      	; 0x2ae <nrf24_state+0x5c>
 2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <nrf24_state+0x62>
 2b4:	00 00       	nop
 2b6:	42 c0       	rjmp	.+132    	; 0x33c <nrf24_state+0xea>
 2b8:	89 81       	ldd	r24, Y+1	; 0x01
 2ba:	8d 7f       	andi	r24, 0xFD	; 253
 2bc:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
 2c0:	41 e0       	ldi	r20, 0x01	; 1
 2c2:	50 e0       	ldi	r21, 0x00	; 0
 2c4:	68 eb       	ldi	r22, 0xB8	; 184
 2c6:	72 e0       	ldi	r23, 0x02	; 2
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 2ce:	36 c0       	rjmp	.+108    	; 0x33c <nrf24_state+0xea>
 2d0:	89 81       	ldd	r24, Y+1	; 0x01
 2d2:	81 60       	ori	r24, 0x01	; 1
 2d4:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
 2d8:	41 e0       	ldi	r20, 0x01	; 1
 2da:	50 e0       	ldi	r21, 0x00	; 0
 2dc:	68 eb       	ldi	r22, 0xB8	; 184
 2de:	72 e0       	ldi	r23, 0x02	; 2
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 2e6:	80 e7       	ldi	r24, 0x70	; 112
 2e8:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
 2ec:	41 e0       	ldi	r20, 0x01	; 1
 2ee:	50 e0       	ldi	r21, 0x00	; 0
 2f0:	68 eb       	ldi	r22, 0xB8	; 184
 2f2:	72 e0       	ldi	r23, 0x02	; 2
 2f4:	87 e0       	ldi	r24, 0x07	; 7
 2f6:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 2fa:	20 c0       	rjmp	.+64     	; 0x33c <nrf24_state+0xea>
 2fc:	89 81       	ldd	r24, Y+1	; 0x01
 2fe:	8e 7f       	andi	r24, 0xFE	; 254
 300:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
 304:	41 e0       	ldi	r20, 0x01	; 1
 306:	50 e0       	ldi	r21, 0x00	; 0
 308:	68 eb       	ldi	r22, 0xB8	; 184
 30a:	72 e0       	ldi	r23, 0x02	; 2
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 312:	14 c0       	rjmp	.+40     	; 0x33c <nrf24_state+0xea>
 314:	29 98       	cbi	0x05, 1	; 5
 316:	12 c0       	rjmp	.+36     	; 0x33c <nrf24_state+0xea>
 318:	89 81       	ldd	r24, Y+1	; 0x01
 31a:	8e 7f       	andi	r24, 0xFE	; 254
 31c:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
 320:	41 e0       	ldi	r20, 0x01	; 1
 322:	50 e0       	ldi	r21, 0x00	; 0
 324:	68 eb       	ldi	r22, 0xB8	; 184
 326:	72 e0       	ldi	r23, 0x02	; 2
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 32e:	29 9a       	sbi	0x05, 1	; 5
 330:	87 e5       	ldi	r24, 0x57	; 87
 332:	92 e0       	ldi	r25, 0x02	; 2
 334:	01 97       	sbiw	r24, 0x01	; 1
 336:	f1 f7       	brne	.-4      	; 0x334 <nrf24_state+0xe2>
 338:	00 c0       	rjmp	.+0      	; 0x33a <nrf24_state+0xe8>
 33a:	00 00       	nop
 33c:	0f 90       	pop	r0
 33e:	df 91       	pop	r29
 340:	cf 91       	pop	r28
 342:	1f 91       	pop	r17
 344:	08 95       	ret

00000346 <nrf24_start_listening>:
 346:	83 e0       	ldi	r24, 0x03	; 3
 348:	0e 94 29 01 	call	0x252	; 0x252 <nrf24_state>
 34c:	29 9a       	sbi	0x05, 1	; 5
 34e:	87 e5       	ldi	r24, 0x57	; 87
 350:	92 e0       	ldi	r25, 0x02	; 2
 352:	01 97       	sbiw	r24, 0x01	; 1
 354:	f1 f7       	brne	.-4      	; 0x352 <nrf24_start_listening+0xc>
 356:	00 c0       	rjmp	.+0      	; 0x358 <nrf24_start_listening+0x12>
 358:	00 00       	nop
 35a:	08 95       	ret

0000035c <nrf24_send_message>:
 35c:	cf 92       	push	r12
 35e:	df 92       	push	r13
 360:	ef 92       	push	r14
 362:	ff 92       	push	r15
 364:	0f 93       	push	r16
 366:	1f 93       	push	r17
 368:	cf 93       	push	r28
 36a:	df 93       	push	r29
 36c:	cd b7       	in	r28, 0x3d	; 61
 36e:	de b7       	in	r29, 0x3e	; 62
 370:	a0 97       	sbiw	r28, 0x20	; 32
 372:	0f b6       	in	r0, 0x3f	; 63
 374:	f8 94       	cli
 376:	de bf       	out	0x3e, r29	; 62
 378:	0f be       	out	0x3f, r0	; 63
 37a:	cd bf       	out	0x3d, r28	; 61
 37c:	6c 01       	movw	r12, r24
 37e:	68 94       	set
 380:	ff 24       	eor	r15, r15
 382:	f5 f8       	bld	r15, 5
 384:	ce 01       	movw	r24, r28
 386:	01 96       	adiw	r24, 0x01	; 1
 388:	fc 01       	movw	r30, r24
 38a:	2f 2d       	mov	r18, r15
 38c:	11 92       	st	Z+, r1
 38e:	2a 95       	dec	r18
 390:	e9 f7       	brne	.-6      	; 0x38c <nrf24_send_message+0x30>
 392:	b6 01       	movw	r22, r12
 394:	0e 94 8f 04 	call	0x91e	; 0x91e <strcpy>
 398:	f6 01       	movw	r30, r12
 39a:	01 90       	ld	r0, Z+
 39c:	00 20       	and	r0, r0
 39e:	e9 f7       	brne	.-6      	; 0x39a <nrf24_send_message+0x3e>
 3a0:	31 97       	sbiw	r30, 0x01	; 1
 3a2:	8f 01       	movw	r16, r30
 3a4:	0c 19       	sub	r16, r12
 3a6:	1d 09       	sbc	r17, r13
 3a8:	84 e0       	ldi	r24, 0x04	; 4
 3aa:	0e 94 29 01 	call	0x252	; 0x252 <nrf24_state>
 3ae:	40 e0       	ldi	r20, 0x00	; 0
 3b0:	50 e0       	ldi	r21, 0x00	; 0
 3b2:	60 e0       	ldi	r22, 0x00	; 0
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	82 ee       	ldi	r24, 0xE2	; 226
 3b8:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 3bc:	40 e0       	ldi	r20, 0x00	; 0
 3be:	50 e0       	ldi	r21, 0x00	; 0
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	81 ee       	ldi	r24, 0xE1	; 225
 3c6:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 3ca:	f0 92 b8 02 	sts	0x02B8, r15	; 0x8002b8 <data>
 3ce:	41 e0       	ldi	r20, 0x01	; 1
 3d0:	50 e0       	ldi	r21, 0x00	; 0
 3d2:	68 eb       	ldi	r22, 0xB8	; 184
 3d4:	72 e0       	ldi	r23, 0x02	; 2
 3d6:	87 e0       	ldi	r24, 0x07	; 7
 3d8:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 3dc:	41 e0       	ldi	r20, 0x01	; 1
 3de:	50 e0       	ldi	r21, 0x00	; 0
 3e0:	68 eb       	ldi	r22, 0xB8	; 184
 3e2:	72 e0       	ldi	r23, 0x02	; 2
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
 3ea:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <data>
 3ee:	80 64       	ori	r24, 0x40	; 64
 3f0:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
 3f4:	41 e0       	ldi	r20, 0x01	; 1
 3f6:	50 e0       	ldi	r21, 0x00	; 0
 3f8:	68 eb       	ldi	r22, 0xB8	; 184
 3fa:	72 e0       	ldi	r23, 0x02	; 2
 3fc:	80 e0       	ldi	r24, 0x00	; 0
 3fe:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 402:	2a 98       	cbi	0x05, 2	; 5
 404:	80 eb       	ldi	r24, 0xB0	; 176
 406:	0e 94 ad 02 	call	0x55a	; 0x55a <spi_send>
 40a:	ef ef       	ldi	r30, 0xFF	; 255
 40c:	e0 0f       	add	r30, r16
 40e:	00 23       	and	r16, r16
 410:	81 f0       	breq	.+32     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 412:	86 01       	movw	r16, r12
 414:	ee 2e       	mov	r14, r30
 416:	f1 2c       	mov	r15, r1
 418:	f7 01       	movw	r30, r14
 41a:	31 96       	adiw	r30, 0x01	; 1
 41c:	76 01       	movw	r14, r12
 41e:	ee 0e       	add	r14, r30
 420:	ff 1e       	adc	r15, r31
 422:	f8 01       	movw	r30, r16
 424:	81 91       	ld	r24, Z+
 426:	8f 01       	movw	r16, r30
 428:	0e 94 ad 02 	call	0x55a	; 0x55a <spi_send>
 42c:	0e 15       	cp	r16, r14
 42e:	1f 05       	cpc	r17, r15
 430:	c1 f7       	brne	.-16     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 432:	80 e0       	ldi	r24, 0x00	; 0
 434:	0e 94 ad 02 	call	0x55a	; 0x55a <spi_send>
 438:	2a 9a       	sbi	0x05, 2	; 5
 43a:	29 9a       	sbi	0x05, 1	; 5
 43c:	f0 e5       	ldi	r31, 0x50	; 80
 43e:	fa 95       	dec	r31
 440:	f1 f7       	brne	.-4      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 442:	29 98       	cbi	0x05, 1	; 5
 444:	41 e0       	ldi	r20, 0x01	; 1
 446:	50 e0       	ldi	r21, 0x00	; 0
 448:	68 eb       	ldi	r22, 0xB8	; 184
 44a:	72 e0       	ldi	r23, 0x02	; 2
 44c:	87 e0       	ldi	r24, 0x07	; 7
 44e:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
 452:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <data>
 456:	85 fd       	sbrc	r24, 5
 458:	0b c0       	rjmp	.+22     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 45a:	41 e0       	ldi	r20, 0x01	; 1
 45c:	50 e0       	ldi	r21, 0x00	; 0
 45e:	68 eb       	ldi	r22, 0xB8	; 184
 460:	72 e0       	ldi	r23, 0x02	; 2
 462:	87 e0       	ldi	r24, 0x07	; 7
 464:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
 468:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <data>
 46c:	85 ff       	sbrs	r24, 5
 46e:	f5 cf       	rjmp	.-22     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 470:	ce 01       	movw	r24, r28
 472:	01 96       	adiw	r24, 0x01	; 1
 474:	9f 93       	push	r25
 476:	8f 93       	push	r24
 478:	86 e2       	ldi	r24, 0x26	; 38
 47a:	91 e0       	ldi	r25, 0x01	; 1
 47c:	9f 93       	push	r25
 47e:	8f 93       	push	r24
 480:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
 484:	41 e0       	ldi	r20, 0x01	; 1
 486:	50 e0       	ldi	r21, 0x00	; 0
 488:	68 eb       	ldi	r22, 0xB8	; 184
 48a:	72 e0       	ldi	r23, 0x02	; 2
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
 492:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <data>
 496:	8f 7b       	andi	r24, 0xBF	; 191
 498:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
 49c:	41 e0       	ldi	r20, 0x01	; 1
 49e:	50 e0       	ldi	r21, 0x00	; 0
 4a0:	68 eb       	ldi	r22, 0xB8	; 184
 4a2:	72 e0       	ldi	r23, 0x02	; 2
 4a4:	80 e0       	ldi	r24, 0x00	; 0
 4a6:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 4aa:	0e 94 a3 01 	call	0x346	; 0x346 <nrf24_start_listening>
 4ae:	0f 90       	pop	r0
 4b0:	0f 90       	pop	r0
 4b2:	0f 90       	pop	r0
 4b4:	0f 90       	pop	r0
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	a0 96       	adiw	r28, 0x20	; 32
 4ba:	0f b6       	in	r0, 0x3f	; 63
 4bc:	f8 94       	cli
 4be:	de bf       	out	0x3e, r29	; 62
 4c0:	0f be       	out	0x3f, r0	; 63
 4c2:	cd bf       	out	0x3d, r28	; 61
 4c4:	df 91       	pop	r29
 4c6:	cf 91       	pop	r28
 4c8:	1f 91       	pop	r17
 4ca:	0f 91       	pop	r16
 4cc:	ff 90       	pop	r15
 4ce:	ef 90       	pop	r14
 4d0:	df 90       	pop	r13
 4d2:	cf 90       	pop	r12
 4d4:	08 95       	ret

000004d6 <nrf24_read_message>:

const char * nrf24_read_message(void)
{
	// Message placeholder
	static char rx_message[32];
	memset(rx_message,0,32);
 4d6:	80 e2       	ldi	r24, 0x20	; 32
 4d8:	e6 e9       	ldi	r30, 0x96	; 150
 4da:	f2 e0       	ldi	r31, 0x02	; 2
 4dc:	df 01       	movw	r26, r30
 4de:	1d 92       	st	X+, r1
 4e0:	8a 95       	dec	r24
 4e2:	e9 f7       	brne	.-6      	; 0x4de <nrf24_read_message+0x8>
	
	// Write ACK message
	if (AUTO_ACK) nrf24_write_ack();
	
	// Get length of incoming message
	nrf24_read(R_RX_PL_WID,&data,1);
 4e4:	41 e0       	ldi	r20, 0x01	; 1
 4e6:	50 e0       	ldi	r21, 0x00	; 0
 4e8:	68 eb       	ldi	r22, 0xB8	; 184
 4ea:	72 e0       	ldi	r23, 0x02	; 2
 4ec:	80 e6       	ldi	r24, 0x60	; 96
 4ee:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	
	// Read message
	if (data > 0) nrf24_send_spi(R_RX_PAYLOAD,&rx_message,data+1);
 4f2:	40 91 b8 02 	lds	r20, 0x02B8	; 0x8002b8 <data>
 4f6:	44 23       	and	r20, r20
 4f8:	41 f0       	breq	.+16     	; 0x50a <nrf24_read_message+0x34>
 4fa:	50 e0       	ldi	r21, 0x00	; 0
 4fc:	4f 5f       	subi	r20, 0xFF	; 255
 4fe:	5f 4f       	sbci	r21, 0xFF	; 255
 500:	66 e9       	ldi	r22, 0x96	; 150
 502:	72 e0       	ldi	r23, 0x02	; 2
 504:	81 e6       	ldi	r24, 0x61	; 97
 506:	0e 94 53 00 	call	0xa6	; 0xa6 <nrf24_send_spi>

	// Check if there is message in array
	if (strlen(rx_message) > 0)
 50a:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <__data_end>
 50e:	88 23       	and	r24, r24
 510:	69 f0       	breq	.+26     	; 0x52c <nrf24_read_message+0x56>
	{
		// Clear RX interrupt
		data = (1 << RX_DR);
 512:	80 e4       	ldi	r24, 0x40	; 64
 514:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
		nrf24_write(STATUS,&data,1);
 518:	41 e0       	ldi	r20, 0x01	; 1
 51a:	50 e0       	ldi	r21, 0x00	; 0
 51c:	68 eb       	ldi	r22, 0xB8	; 184
 51e:	72 e0       	ldi	r23, 0x02	; 2
 520:	87 e0       	ldi	r24, 0x07	; 7
 522:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
		
		return rx_message;
 526:	86 e9       	ldi	r24, 0x96	; 150
 528:	92 e0       	ldi	r25, 0x02	; 2
 52a:	08 95       	ret
	}
	
	// Clear RX interrupt
	data = (1 << RX_DR);
 52c:	80 e4       	ldi	r24, 0x40	; 64
 52e:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <data>
	nrf24_write(STATUS,&data,1);
 532:	41 e0       	ldi	r20, 0x01	; 1
 534:	50 e0       	ldi	r21, 0x00	; 0
 536:	68 eb       	ldi	r22, 0xB8	; 184
 538:	72 e0       	ldi	r23, 0x02	; 2
 53a:	87 e0       	ldi	r24, 0x07	; 7
 53c:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
	
	return "failed";
 540:	88 e3       	ldi	r24, 0x38	; 56
 542:	91 e0       	ldi	r25, 0x01	; 1
}
 544:	08 95       	ret

00000546 <spi_master_init>:
	loop_until_bit_is_set(SPSR, SPIF);
}

void spi_bulk_exchange( uint8_t *send_buffer, uint8_t *receive_buffer, uint8_t count )
{
	while ( count-- ) {
 546:	24 98       	cbi	0x04, 4	; 4
 548:	84 b1       	in	r24, 0x04	; 4
 54a:	88 62       	ori	r24, 0x28	; 40
 54c:	84 b9       	out	0x04, r24	; 4
 54e:	80 e5       	ldi	r24, 0x50	; 80
 550:	8c bd       	out	0x2c, r24	; 44
 552:	8d b5       	in	r24, 0x2d	; 45
 554:	81 60       	ori	r24, 0x01	; 1
 556:	8d bd       	out	0x2d, r24	; 45
 558:	08 95       	ret

0000055a <spi_send>:
 55a:	8e bd       	out	0x2e, r24	; 46
 55c:	0d b4       	in	r0, 0x2d	; 45
 55e:	07 fe       	sbrs	r0, 7
 560:	fd cf       	rjmp	.-6      	; 0x55c <spi_send+0x2>
 562:	08 95       	ret

00000564 <spi_exchange>:
	}
}

uint8_t spi_exchange( uint8_t send_data )
{
	SPDR = send_data;
 564:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR, SPIF);
 566:	0d b4       	in	r0, 0x2d	; 45
 568:	07 fe       	sbrs	r0, 7
 56a:	fd cf       	rjmp	.-6      	; 0x566 <spi_exchange+0x2>
	return SPDR;
 56c:	8e b5       	in	r24, 0x2e	; 46
}
 56e:	08 95       	ret

00000570 <uart_putchar>:
    stdout = &mystdout;
    stdin  = &mystdin; 
}

// Redirect stdout to UART
int uart_putchar(char c, FILE *stream) {
 570:	cf 93       	push	r28
 572:	c8 2f       	mov	r28, r24
	if (c == '\n') {
 574:	8a 30       	cpi	r24, 0x0A	; 10
 576:	19 f4       	brne	.+6      	; 0x57e <uart_putchar+0xe>
		uart_putchar('\r', stream);
 578:	8d e0       	ldi	r24, 0x0D	; 13
 57a:	0e 94 b8 02 	call	0x570	; 0x570 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
 57e:	e0 ec       	ldi	r30, 0xC0	; 192
 580:	f0 e0       	ldi	r31, 0x00	; 0
 582:	80 81       	ld	r24, Z
 584:	85 ff       	sbrs	r24, 5
 586:	fd cf       	rjmp	.-6      	; 0x582 <uart_putchar+0x12>
	UDR0 = c;
 588:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
 58c:	80 e0       	ldi	r24, 0x00	; 0
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	cf 91       	pop	r28
 592:	08 95       	ret

00000594 <uart_getchar>:

// Redirect stdin to UART
int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
 594:	e0 ec       	ldi	r30, 0xC0	; 192
 596:	f0 e0       	ldi	r31, 0x00	; 0
 598:	80 81       	ld	r24, Z
 59a:	88 23       	and	r24, r24
 59c:	ec f7       	brge	.-6      	; 0x598 <uart_getchar+0x4>
	return UDR0;
 59e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	08 95       	ret

000005a6 <uart_init>:
static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE); 
static FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

void uart_init(void)
{
    UBRR0H = MYUBRR >> 8;
 5a6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    UBRR0L = MYUBRR;
 5aa:	87 e6       	ldi	r24, 0x67	; 103
 5ac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 5b0:	88 e1       	ldi	r24, 0x18	; 24
 5b2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    
    stdout = &mystdout;
 5b6:	ef ec       	ldi	r30, 0xCF	; 207
 5b8:	f2 e0       	ldi	r31, 0x02	; 2
 5ba:	88 e1       	ldi	r24, 0x18	; 24
 5bc:	91 e0       	ldi	r25, 0x01	; 1
 5be:	93 83       	std	Z+3, r25	; 0x03
 5c0:	82 83       	std	Z+2, r24	; 0x02
    stdin  = &mystdin; 
 5c2:	8a e0       	ldi	r24, 0x0A	; 10
 5c4:	91 e0       	ldi	r25, 0x01	; 1
 5c6:	91 83       	std	Z+1, r25	; 0x01
 5c8:	80 83       	st	Z, r24
 5ca:	08 95       	ret

000005cc <__vector_1>:
	}
}

//	Interrupt on IRQ pin
ISR(INT0_vect)
{
 5cc:	1f 92       	push	r1
 5ce:	0f 92       	push	r0
 5d0:	0f b6       	in	r0, 0x3f	; 63
 5d2:	0f 92       	push	r0
 5d4:	11 24       	eor	r1, r1
 5d6:	8f 93       	push	r24
	message_received = true;
 5d8:	81 e0       	ldi	r24, 0x01	; 1
 5da:	80 93 b7 02 	sts	0x02B7, r24	; 0x8002b7 <message_received>
}
 5de:	8f 91       	pop	r24
 5e0:	0f 90       	pop	r0
 5e2:	0f be       	out	0x3f, r0	; 63
 5e4:	0f 90       	pop	r0
 5e6:	1f 90       	pop	r1
 5e8:	18 95       	reti

000005ea <print_config>:

void print_config(void)
{
 5ea:	cf 93       	push	r28
 5ec:	df 93       	push	r29
 5ee:	1f 92       	push	r1
 5f0:	cd b7       	in	r28, 0x3d	; 61
 5f2:	de b7       	in	r29, 0x3e	; 62
	uint8_t data;
	printf("Startup successful\n\n nRF24L01+ configured as:\n");
 5f4:	8f e3       	ldi	r24, 0x3F	; 63
 5f6:	91 e0       	ldi	r25, 0x01	; 1
 5f8:	0e 94 ac 04 	call	0x958	; 0x958 <puts>
	printf("-------------------------------------------\n");
 5fc:	8d e6       	ldi	r24, 0x6D	; 109
 5fe:	91 e0       	ldi	r25, 0x01	; 1
 600:	0e 94 ac 04 	call	0x958	; 0x958 <puts>
	nrf24_read(CONFIG,&data,1);
 604:	41 e0       	ldi	r20, 0x01	; 1
 606:	50 e0       	ldi	r21, 0x00	; 0
 608:	be 01       	movw	r22, r28
 60a:	6f 5f       	subi	r22, 0xFF	; 255
 60c:	7f 4f       	sbci	r23, 0xFF	; 255
 60e:	80 e0       	ldi	r24, 0x00	; 0
 610:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("CONFIG		0x%02X\n",data);
 614:	89 81       	ldd	r24, Y+1	; 0x01
 616:	1f 92       	push	r1
 618:	8f 93       	push	r24
 61a:	89 e9       	ldi	r24, 0x99	; 153
 61c:	91 e0       	ldi	r25, 0x01	; 1
 61e:	9f 93       	push	r25
 620:	8f 93       	push	r24
 622:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(EN_AA,&data,1);
 626:	41 e0       	ldi	r20, 0x01	; 1
 628:	50 e0       	ldi	r21, 0x00	; 0
 62a:	be 01       	movw	r22, r28
 62c:	6f 5f       	subi	r22, 0xFF	; 255
 62e:	7f 4f       	sbci	r23, 0xFF	; 255
 630:	81 e0       	ldi	r24, 0x01	; 1
 632:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("EN_AA			0x%02X\n",data);
 636:	89 81       	ldd	r24, Y+1	; 0x01
 638:	1f 92       	push	r1
 63a:	8f 93       	push	r24
 63c:	89 ea       	ldi	r24, 0xA9	; 169
 63e:	91 e0       	ldi	r25, 0x01	; 1
 640:	9f 93       	push	r25
 642:	8f 93       	push	r24
 644:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(EN_RXADDR,&data,1);
 648:	41 e0       	ldi	r20, 0x01	; 1
 64a:	50 e0       	ldi	r21, 0x00	; 0
 64c:	be 01       	movw	r22, r28
 64e:	6f 5f       	subi	r22, 0xFF	; 255
 650:	7f 4f       	sbci	r23, 0xFF	; 255
 652:	82 e0       	ldi	r24, 0x02	; 2
 654:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("EN_RXADDR		0x%02X\n",data);
 658:	89 81       	ldd	r24, Y+1	; 0x01
 65a:	1f 92       	push	r1
 65c:	8f 93       	push	r24
 65e:	89 eb       	ldi	r24, 0xB9	; 185
 660:	91 e0       	ldi	r25, 0x01	; 1
 662:	9f 93       	push	r25
 664:	8f 93       	push	r24
 666:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(SETUP_RETR,&data,1);
 66a:	41 e0       	ldi	r20, 0x01	; 1
 66c:	50 e0       	ldi	r21, 0x00	; 0
 66e:	be 01       	movw	r22, r28
 670:	6f 5f       	subi	r22, 0xFF	; 255
 672:	7f 4f       	sbci	r23, 0xFF	; 255
 674:	84 e0       	ldi	r24, 0x04	; 4
 676:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("SETUP_RETR		0x%02X\n",data);
 67a:	89 81       	ldd	r24, Y+1	; 0x01
 67c:	1f 92       	push	r1
 67e:	8f 93       	push	r24
 680:	8c ec       	ldi	r24, 0xCC	; 204
 682:	91 e0       	ldi	r25, 0x01	; 1
 684:	9f 93       	push	r25
 686:	8f 93       	push	r24
 688:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(RF_CH,&data,1);
 68c:	41 e0       	ldi	r20, 0x01	; 1
 68e:	50 e0       	ldi	r21, 0x00	; 0
 690:	be 01       	movw	r22, r28
 692:	6f 5f       	subi	r22, 0xFF	; 255
 694:	7f 4f       	sbci	r23, 0xFF	; 255
 696:	85 e0       	ldi	r24, 0x05	; 5
 698:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("RF_CH			0x%02X\n",data);
 69c:	89 81       	ldd	r24, Y+1	; 0x01
 69e:	1f 92       	push	r1
 6a0:	8f 93       	push	r24
 6a2:	80 ee       	ldi	r24, 0xE0	; 224
 6a4:	91 e0       	ldi	r25, 0x01	; 1
 6a6:	9f 93       	push	r25
 6a8:	8f 93       	push	r24
 6aa:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(RF_SETUP,&data,1);
 6ae:	41 e0       	ldi	r20, 0x01	; 1
 6b0:	50 e0       	ldi	r21, 0x00	; 0
 6b2:	be 01       	movw	r22, r28
 6b4:	6f 5f       	subi	r22, 0xFF	; 255
 6b6:	7f 4f       	sbci	r23, 0xFF	; 255
 6b8:	86 e0       	ldi	r24, 0x06	; 6
 6ba:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("RF_SETUP		0x%02X\n",data);
 6be:	89 81       	ldd	r24, Y+1	; 0x01
 6c0:	1f 92       	push	r1
 6c2:	8f 93       	push	r24
 6c4:	80 ef       	ldi	r24, 0xF0	; 240
 6c6:	91 e0       	ldi	r25, 0x01	; 1
 6c8:	9f 93       	push	r25
 6ca:	8f 93       	push	r24
 6cc:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(STATUS,&data,1);
 6d0:	41 e0       	ldi	r20, 0x01	; 1
 6d2:	50 e0       	ldi	r21, 0x00	; 0
 6d4:	be 01       	movw	r22, r28
 6d6:	6f 5f       	subi	r22, 0xFF	; 255
 6d8:	7f 4f       	sbci	r23, 0xFF	; 255
 6da:	87 e0       	ldi	r24, 0x07	; 7
 6dc:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("STATUS		0x%02X\n",data);
 6e0:	89 81       	ldd	r24, Y+1	; 0x01
 6e2:	1f 92       	push	r1
 6e4:	8f 93       	push	r24
 6e6:	82 e0       	ldi	r24, 0x02	; 2
 6e8:	92 e0       	ldi	r25, 0x02	; 2
 6ea:	9f 93       	push	r25
 6ec:	8f 93       	push	r24
 6ee:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	nrf24_read(FEATURE,&data,1);
 6f2:	41 e0       	ldi	r20, 0x01	; 1
 6f4:	50 e0       	ldi	r21, 0x00	; 0
 6f6:	be 01       	movw	r22, r28
 6f8:	6f 5f       	subi	r22, 0xFF	; 255
 6fa:	7f 4f       	sbci	r23, 0xFF	; 255
 6fc:	8d e1       	ldi	r24, 0x1D	; 29
 6fe:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("FEATURE		0x%02X\n",data);
 702:	89 81       	ldd	r24, Y+1	; 0x01
 704:	1f 92       	push	r1
 706:	8f 93       	push	r24
 708:	82 e1       	ldi	r24, 0x12	; 18
 70a:	92 e0       	ldi	r25, 0x02	; 2
 70c:	9f 93       	push	r25
 70e:	8f 93       	push	r24
 710:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
	printf("-------------------------------------------\n\n");
 714:	0f b6       	in	r0, 0x3f	; 63
 716:	f8 94       	cli
 718:	de bf       	out	0x3e, r29	; 62
 71a:	0f be       	out	0x3f, r0	; 63
 71c:	cd bf       	out	0x3d, r28	; 61
 71e:	83 e2       	ldi	r24, 0x23	; 35
 720:	92 e0       	ldi	r25, 0x02	; 2
 722:	0e 94 ac 04 	call	0x958	; 0x958 <puts>
}
 726:	0f 90       	pop	r0
 728:	df 91       	pop	r29
 72a:	cf 91       	pop	r28
 72c:	08 95       	ret

0000072e <adc_init>:

/* INIT ADC */
void adc_init(void)
{
	/** Setup and enable ADC **/
	ADMUX = (0<<REFS1)|    // Reference Selection Bits
 72e:	84 e4       	ldi	r24, 0x44	; 68
 730:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<REFS0)|    // AVcc - external cap at AREF
	(0<<ADLAR)|    // ADC Left Adjust Result
	(1<<MUX2)|     // Analog Channel Selection Bits
	(0<<MUX1)|     // ADC4 (PC4 PIN27)
	(0<<MUX0);
	ADCSRA = (1<<ADEN)|    // ADC ENable
 734:	85 e8       	ldi	r24, 0x85	; 133
 736:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 73a:	08 95       	ret

0000073c <read_adc>:
}
/* READ ADC PINS */
void read_adc(void)
{
	unsigned char i = 4;
	adc_temp = 0;
 73c:	10 92 ce 02 	sts	0x02CE, r1	; 0x8002ce <adc_temp+0x1>
 740:	10 92 cd 02 	sts	0x02CD, r1	; 0x8002cd <adc_temp>
 744:	24 e0       	ldi	r18, 0x04	; 4
	while (i--)
	{
		ADCSRA |= (1<<ADSC);
 746:	ea e7       	ldi	r30, 0x7A	; 122
 748:	f0 e0       	ldi	r31, 0x00	; 0
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
 74a:	a8 e7       	ldi	r26, 0x78	; 120
 74c:	b0 e0       	ldi	r27, 0x00	; 0
{
	unsigned char i = 4;
	adc_temp = 0;
	while (i--)
	{
		ADCSRA |= (1<<ADSC);
 74e:	80 81       	ld	r24, Z
 750:	80 64       	ori	r24, 0x40	; 64
 752:	80 83       	st	Z, r24
		while(ADCSRA & (1<<ADSC));
 754:	80 81       	ld	r24, Z
 756:	86 fd       	sbrc	r24, 6
 758:	fd cf       	rjmp	.-6      	; 0x754 <read_adc+0x18>
		adc_temp+= ADC;
 75a:	4d 91       	ld	r20, X+
 75c:	5c 91       	ld	r21, X
 75e:	11 97       	sbiw	r26, 0x01	; 1
 760:	80 91 cd 02 	lds	r24, 0x02CD	; 0x8002cd <adc_temp>
 764:	90 91 ce 02 	lds	r25, 0x02CE	; 0x8002ce <adc_temp+0x1>
 768:	84 0f       	add	r24, r20
 76a:	95 1f       	adc	r25, r21
 76c:	90 93 ce 02 	sts	0x02CE, r25	; 0x8002ce <adc_temp+0x1>
 770:	80 93 cd 02 	sts	0x02CD, r24	; 0x8002cd <adc_temp>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 774:	3f ef       	ldi	r19, 0xFF	; 255
 776:	80 e7       	ldi	r24, 0x70	; 112
 778:	92 e0       	ldi	r25, 0x02	; 2
 77a:	31 50       	subi	r19, 0x01	; 1
 77c:	80 40       	sbci	r24, 0x00	; 0
 77e:	90 40       	sbci	r25, 0x00	; 0
 780:	e1 f7       	brne	.-8      	; 0x77a <read_adc+0x3e>
 782:	00 c0       	rjmp	.+0      	; 0x784 <read_adc+0x48>
 784:	00 00       	nop
 786:	21 50       	subi	r18, 0x01	; 1
/* READ ADC PINS */
void read_adc(void)
{
	unsigned char i = 4;
	adc_temp = 0;
	while (i--)
 788:	11 f7       	brne	.-60     	; 0x74e <read_adc+0x12>
		ADCSRA |= (1<<ADSC);
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
		_delay_ms(50);
	}
	adc_temp = adc_temp / 4;  // Average a few samples
 78a:	80 91 cd 02 	lds	r24, 0x02CD	; 0x8002cd <adc_temp>
 78e:	90 91 ce 02 	lds	r25, 0x02CE	; 0x8002ce <adc_temp+0x1>
 792:	96 95       	lsr	r25
 794:	87 95       	ror	r24
 796:	96 95       	lsr	r25
 798:	87 95       	ror	r24
 79a:	90 93 ce 02 	sts	0x02CE, r25	; 0x8002ce <adc_temp+0x1>
 79e:	80 93 cd 02 	sts	0x02CD, r24	; 0x8002cd <adc_temp>
 7a2:	08 95       	ret

000007a4 <main>:
//	Used in IRQ ISR
volatile bool message_received = false;
volatile bool status = false;

int main(void)
{
 7a4:	cf 93       	push	r28
 7a6:	df 93       	push	r29
 7a8:	cd b7       	in	r28, 0x3d	; 61
 7aa:	de b7       	in	r29, 0x3e	; 62
 7ac:	a0 97       	sbiw	r28, 0x20	; 32
 7ae:	0f b6       	in	r0, 0x3f	; 63
 7b0:	f8 94       	cli
 7b2:	de bf       	out	0x3e, r29	; 62
 7b4:	0f be       	out	0x3f, r0	; 63
 7b6:	cd bf       	out	0x3d, r28	; 61
	//	Set cliche message to send (message cannot exceed 32 characters)
	char tx_message[32];				// Define string array
	strcpy(tx_message,"hello i am cody");	// Copy string into array
 7b8:	80 e1       	ldi	r24, 0x10	; 16
 7ba:	e0 e5       	ldi	r30, 0x50	; 80
 7bc:	f2 e0       	ldi	r31, 0x02	; 2
 7be:	de 01       	movw	r26, r28
 7c0:	11 96       	adiw	r26, 0x01	; 1
 7c2:	01 90       	ld	r0, Z+
 7c4:	0d 92       	st	X+, r0
 7c6:	8a 95       	dec	r24
 7c8:	e1 f7       	brne	.-8      	; 0x7c2 <main+0x1e>
	
	//	Initialize UART
	uart_init();
 7ca:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <uart_init>
	adc_init();
 7ce:	0e 94 97 03 	call	0x72e	; 0x72e <adc_init>
	//	Initialize nRF24L01+ and print configuration info
	nrf24_init();
 7d2:	0e 94 7e 00 	call	0xfc	; 0xfc <nrf24_init>
	print_config();
 7d6:	0e 94 f5 02 	call	0x5ea	; 0x5ea <print_config>
	
	//	Start listening to incoming messages
	nrf24_start_listening();
 7da:	0e 94 a3 01 	call	0x346	; 0x346 <nrf24_start_listening>
	
	while (1)
	{
		read_adc();
		adc_temp = (adc_temp*500)/1023 + 20;
 7de:	0f 2e       	mov	r0, r31
 7e0:	f4 ef       	ldi	r31, 0xF4	; 244
 7e2:	af 2e       	mov	r10, r31
 7e4:	bb 24       	eor	r11, r11
 7e6:	b3 94       	inc	r11
 7e8:	f0 2d       	mov	r31, r0
 7ea:	0f 2e       	mov	r0, r31
 7ec:	cc 24       	eor	r12, r12
 7ee:	ca 94       	dec	r12
 7f0:	f3 e0       	ldi	r31, 0x03	; 3
 7f2:	df 2e       	mov	r13, r31
 7f4:	f0 2d       	mov	r31, r0
		snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp);  // print it
 7f6:	0f 2e       	mov	r0, r31
 7f8:	f0 e6       	ldi	r31, 0x60	; 96
 7fa:	ef 2e       	mov	r14, r31
 7fc:	f2 e0       	ldi	r31, 0x02	; 2
 7fe:	ff 2e       	mov	r15, r31
 800:	f0 2d       	mov	r31, r0
 802:	09 eb       	ldi	r16, 0xB9	; 185
 804:	12 e0       	ldi	r17, 0x02	; 2
		_delay_ms(1500);
		if (message_received)
		{
			//	Message received, print it
			message_received = false;
			printf("Received message: %s\n",nrf24_read_message());
 806:	0f 2e       	mov	r0, r31
 808:	f6 e6       	ldi	r31, 0x66	; 102
 80a:	8f 2e       	mov	r8, r31
 80c:	f2 e0       	ldi	r31, 0x02	; 2
 80e:	9f 2e       	mov	r9, r31
 810:	f0 2d       	mov	r31, r0
	
	while (1)
	{
		read_adc();
		adc_temp = (adc_temp*500)/1023 + 20;
		snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp);  // print it
 812:	50 2e       	mov	r5, r16
 814:	61 2e       	mov	r6, r17
 816:	0f 2e       	mov	r0, r31
 818:	f4 e1       	ldi	r31, 0x14	; 20
 81a:	7f 2e       	mov	r7, r31
 81c:	f0 2d       	mov	r31, r0
	//	Start listening to incoming messages
	nrf24_start_listening();
	
	while (1)
	{
		read_adc();
 81e:	0e 94 9e 03 	call	0x73c	; 0x73c <read_adc>
		adc_temp = (adc_temp*500)/1023 + 20;
 822:	20 91 cd 02 	lds	r18, 0x02CD	; 0x8002cd <adc_temp>
 826:	30 91 ce 02 	lds	r19, 0x02CE	; 0x8002ce <adc_temp+0x1>
 82a:	2a 9d       	mul	r18, r10
 82c:	c0 01       	movw	r24, r0
 82e:	2b 9d       	mul	r18, r11
 830:	90 0d       	add	r25, r0
 832:	3a 9d       	mul	r19, r10
 834:	90 0d       	add	r25, r0
 836:	11 24       	eor	r1, r1
 838:	b6 01       	movw	r22, r12
 83a:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <__udivmodhi4>
 83e:	6c 5e       	subi	r22, 0xEC	; 236
 840:	7f 4f       	sbci	r23, 0xFF	; 255
 842:	70 93 ce 02 	sts	0x02CE, r23	; 0x8002ce <adc_temp+0x1>
 846:	60 93 cd 02 	sts	0x02CD, r22	; 0x8002cd <adc_temp>
		snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp);  // print it
 84a:	80 91 cd 02 	lds	r24, 0x02CD	; 0x8002cd <adc_temp>
 84e:	90 91 ce 02 	lds	r25, 0x02CE	; 0x8002ce <adc_temp+0x1>
 852:	9f 93       	push	r25
 854:	8f 93       	push	r24
 856:	ff 92       	push	r15
 858:	ef 92       	push	r14
 85a:	1f 92       	push	r1
 85c:	7f 92       	push	r7
 85e:	1f 93       	push	r17
 860:	0f 93       	push	r16
 862:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <snprintf>
		strcpy(tx_message,outs);	// Copy string into array
 866:	65 2d       	mov	r22, r5
 868:	76 2d       	mov	r23, r6
 86a:	ce 01       	movw	r24, r28
 86c:	01 96       	adiw	r24, 0x01	; 1
 86e:	0e 94 8f 04 	call	0x91e	; 0x91e <strcpy>
		nrf24_send_message(tx_message);
 872:	ce 01       	movw	r24, r28
 874:	01 96       	adiw	r24, 0x01	; 1
 876:	0e 94 ae 01 	call	0x35c	; 0x35c <nrf24_send_message>
 87a:	2f ef       	ldi	r18, 0xFF	; 255
 87c:	3d e3       	ldi	r19, 0x3D	; 61
 87e:	89 e4       	ldi	r24, 0x49	; 73
 880:	21 50       	subi	r18, 0x01	; 1
 882:	30 40       	sbci	r19, 0x00	; 0
 884:	80 40       	sbci	r24, 0x00	; 0
 886:	e1 f7       	brne	.-8      	; 0x880 <main+0xdc>
 888:	00 c0       	rjmp	.+0      	; 0x88a <main+0xe6>
 88a:	00 00       	nop
		_delay_ms(1500);
		if (message_received)
 88c:	80 91 b7 02 	lds	r24, 0x02B7	; 0x8002b7 <message_received>
 890:	0f b6       	in	r0, 0x3f	; 63
 892:	f8 94       	cli
 894:	de bf       	out	0x3e, r29	; 62
 896:	0f be       	out	0x3f, r0	; 63
 898:	cd bf       	out	0x3d, r28	; 61
 89a:	88 23       	and	r24, r24
 89c:	09 f4       	brne	.+2      	; 0x8a0 <main+0xfc>
 89e:	bf cf       	rjmp	.-130    	; 0x81e <main+0x7a>
		{
			//	Message received, print it
			message_received = false;
 8a0:	10 92 b7 02 	sts	0x02B7, r1	; 0x8002b7 <message_received>
			printf("Received message: %s\n",nrf24_read_message());
 8a4:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <nrf24_read_message>
 8a8:	9f 93       	push	r25
 8aa:	8f 93       	push	r24
 8ac:	9f 92       	push	r9
 8ae:	8f 92       	push	r8
 8b0:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
 8b4:	3f ef       	ldi	r19, 0xFF	; 255
 8b6:	89 e6       	ldi	r24, 0x69	; 105
 8b8:	98 e1       	ldi	r25, 0x18	; 24
 8ba:	31 50       	subi	r19, 0x01	; 1
 8bc:	80 40       	sbci	r24, 0x00	; 0
 8be:	90 40       	sbci	r25, 0x00	; 0
 8c0:	e1 f7       	brne	.-8      	; 0x8ba <main+0x116>
 8c2:	00 c0       	rjmp	.+0      	; 0x8c4 <main+0x120>
 8c4:	00 00       	nop
			//	Send message as response
			_delay_ms(500);
			status = nrf24_send_message(tx_message);
 8c6:	ce 01       	movw	r24, r28
 8c8:	01 96       	adiw	r24, 0x01	; 1
 8ca:	0e 94 ae 01 	call	0x35c	; 0x35c <nrf24_send_message>
 8ce:	91 e0       	ldi	r25, 0x01	; 1
 8d0:	0f 90       	pop	r0
 8d2:	0f 90       	pop	r0
 8d4:	0f 90       	pop	r0
 8d6:	0f 90       	pop	r0
 8d8:	81 11       	cpse	r24, r1
 8da:	01 c0       	rjmp	.+2      	; 0x8de <main+0x13a>
 8dc:	90 e0       	ldi	r25, 0x00	; 0
 8de:	90 93 b6 02 	sts	0x02B6, r25	; 0x8002b6 <status>
			if (status == true) printf("Message sent successfully\n");
 8e2:	80 91 b6 02 	lds	r24, 0x02B6	; 0x8002b6 <status>
 8e6:	88 23       	and	r24, r24
 8e8:	09 f4       	brne	.+2      	; 0x8ec <main+0x148>
 8ea:	99 cf       	rjmp	.-206    	; 0x81e <main+0x7a>
 8ec:	8c e7       	ldi	r24, 0x7C	; 124
 8ee:	92 e0       	ldi	r25, 0x02	; 2
 8f0:	0e 94 ac 04 	call	0x958	; 0x958 <puts>
 8f4:	90 cf       	rjmp	.-224    	; 0x816 <main+0x72>

000008f6 <__udivmodhi4>:
 8f6:	aa 1b       	sub	r26, r26
 8f8:	bb 1b       	sub	r27, r27
 8fa:	51 e1       	ldi	r21, 0x11	; 17
 8fc:	07 c0       	rjmp	.+14     	; 0x90c <__udivmodhi4_ep>

000008fe <__udivmodhi4_loop>:
 8fe:	aa 1f       	adc	r26, r26
 900:	bb 1f       	adc	r27, r27
 902:	a6 17       	cp	r26, r22
 904:	b7 07       	cpc	r27, r23
 906:	10 f0       	brcs	.+4      	; 0x90c <__udivmodhi4_ep>
 908:	a6 1b       	sub	r26, r22
 90a:	b7 0b       	sbc	r27, r23

0000090c <__udivmodhi4_ep>:
 90c:	88 1f       	adc	r24, r24
 90e:	99 1f       	adc	r25, r25
 910:	5a 95       	dec	r21
 912:	a9 f7       	brne	.-22     	; 0x8fe <__udivmodhi4_loop>
 914:	80 95       	com	r24
 916:	90 95       	com	r25
 918:	bc 01       	movw	r22, r24
 91a:	cd 01       	movw	r24, r26
 91c:	08 95       	ret

0000091e <strcpy>:
 91e:	fb 01       	movw	r30, r22
 920:	dc 01       	movw	r26, r24
 922:	01 90       	ld	r0, Z+
 924:	0d 92       	st	X+, r0
 926:	00 20       	and	r0, r0
 928:	e1 f7       	brne	.-8      	; 0x922 <strcpy+0x4>
 92a:	08 95       	ret

0000092c <printf>:
 92c:	a0 e0       	ldi	r26, 0x00	; 0
 92e:	b0 e0       	ldi	r27, 0x00	; 0
 930:	ec e9       	ldi	r30, 0x9C	; 156
 932:	f4 e0       	ldi	r31, 0x04	; 4
 934:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <__prologue_saves__+0x20>
 938:	ae 01       	movw	r20, r28
 93a:	4b 5f       	subi	r20, 0xFB	; 251
 93c:	5f 4f       	sbci	r21, 0xFF	; 255
 93e:	fa 01       	movw	r30, r20
 940:	61 91       	ld	r22, Z+
 942:	71 91       	ld	r23, Z+
 944:	af 01       	movw	r20, r30
 946:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <__iob+0x2>
 94a:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <__iob+0x3>
 94e:	0e 94 0c 05 	call	0xa18	; 0xa18 <vfprintf>
 952:	e2 e0       	ldi	r30, 0x02	; 2
 954:	0c 94 c9 07 	jmp	0xf92	; 0xf92 <__epilogue_restores__+0x20>

00000958 <puts>:
 958:	0f 93       	push	r16
 95a:	1f 93       	push	r17
 95c:	cf 93       	push	r28
 95e:	df 93       	push	r29
 960:	e0 91 d1 02 	lds	r30, 0x02D1	; 0x8002d1 <__iob+0x2>
 964:	f0 91 d2 02 	lds	r31, 0x02D2	; 0x8002d2 <__iob+0x3>
 968:	23 81       	ldd	r18, Z+3	; 0x03
 96a:	21 ff       	sbrs	r18, 1
 96c:	1b c0       	rjmp	.+54     	; 0x9a4 <puts+0x4c>
 96e:	8c 01       	movw	r16, r24
 970:	d0 e0       	ldi	r29, 0x00	; 0
 972:	c0 e0       	ldi	r28, 0x00	; 0
 974:	f8 01       	movw	r30, r16
 976:	81 91       	ld	r24, Z+
 978:	8f 01       	movw	r16, r30
 97a:	60 91 d1 02 	lds	r22, 0x02D1	; 0x8002d1 <__iob+0x2>
 97e:	70 91 d2 02 	lds	r23, 0x02D2	; 0x8002d2 <__iob+0x3>
 982:	db 01       	movw	r26, r22
 984:	18 96       	adiw	r26, 0x08	; 8
 986:	ed 91       	ld	r30, X+
 988:	fc 91       	ld	r31, X
 98a:	19 97       	sbiw	r26, 0x09	; 9
 98c:	88 23       	and	r24, r24
 98e:	31 f0       	breq	.+12     	; 0x99c <puts+0x44>
 990:	09 95       	icall
 992:	89 2b       	or	r24, r25
 994:	79 f3       	breq	.-34     	; 0x974 <puts+0x1c>
 996:	df ef       	ldi	r29, 0xFF	; 255
 998:	cf ef       	ldi	r28, 0xFF	; 255
 99a:	ec cf       	rjmp	.-40     	; 0x974 <puts+0x1c>
 99c:	8a e0       	ldi	r24, 0x0A	; 10
 99e:	09 95       	icall
 9a0:	89 2b       	or	r24, r25
 9a2:	19 f0       	breq	.+6      	; 0x9aa <puts+0x52>
 9a4:	8f ef       	ldi	r24, 0xFF	; 255
 9a6:	9f ef       	ldi	r25, 0xFF	; 255
 9a8:	02 c0       	rjmp	.+4      	; 0x9ae <puts+0x56>
 9aa:	8d 2f       	mov	r24, r29
 9ac:	9c 2f       	mov	r25, r28
 9ae:	df 91       	pop	r29
 9b0:	cf 91       	pop	r28
 9b2:	1f 91       	pop	r17
 9b4:	0f 91       	pop	r16
 9b6:	08 95       	ret

000009b8 <snprintf>:
 9b8:	ae e0       	ldi	r26, 0x0E	; 14
 9ba:	b0 e0       	ldi	r27, 0x00	; 0
 9bc:	e2 ee       	ldi	r30, 0xE2	; 226
 9be:	f4 e0       	ldi	r31, 0x04	; 4
 9c0:	0c 94 ab 07 	jmp	0xf56	; 0xf56 <__prologue_saves__+0x1c>
 9c4:	0d 89       	ldd	r16, Y+21	; 0x15
 9c6:	1e 89       	ldd	r17, Y+22	; 0x16
 9c8:	8f 89       	ldd	r24, Y+23	; 0x17
 9ca:	98 8d       	ldd	r25, Y+24	; 0x18
 9cc:	26 e0       	ldi	r18, 0x06	; 6
 9ce:	2c 83       	std	Y+4, r18	; 0x04
 9d0:	1a 83       	std	Y+2, r17	; 0x02
 9d2:	09 83       	std	Y+1, r16	; 0x01
 9d4:	97 ff       	sbrs	r25, 7
 9d6:	02 c0       	rjmp	.+4      	; 0x9dc <snprintf+0x24>
 9d8:	80 e0       	ldi	r24, 0x00	; 0
 9da:	90 e8       	ldi	r25, 0x80	; 128
 9dc:	01 97       	sbiw	r24, 0x01	; 1
 9de:	9e 83       	std	Y+6, r25	; 0x06
 9e0:	8d 83       	std	Y+5, r24	; 0x05
 9e2:	ae 01       	movw	r20, r28
 9e4:	45 5e       	subi	r20, 0xE5	; 229
 9e6:	5f 4f       	sbci	r21, 0xFF	; 255
 9e8:	69 8d       	ldd	r22, Y+25	; 0x19
 9ea:	7a 8d       	ldd	r23, Y+26	; 0x1a
 9ec:	ce 01       	movw	r24, r28
 9ee:	01 96       	adiw	r24, 0x01	; 1
 9f0:	0e 94 0c 05 	call	0xa18	; 0xa18 <vfprintf>
 9f4:	4d 81       	ldd	r20, Y+5	; 0x05
 9f6:	5e 81       	ldd	r21, Y+6	; 0x06
 9f8:	57 fd       	sbrc	r21, 7
 9fa:	0a c0       	rjmp	.+20     	; 0xa10 <snprintf+0x58>
 9fc:	2f 81       	ldd	r18, Y+7	; 0x07
 9fe:	38 85       	ldd	r19, Y+8	; 0x08
 a00:	42 17       	cp	r20, r18
 a02:	53 07       	cpc	r21, r19
 a04:	0c f4       	brge	.+2      	; 0xa08 <snprintf+0x50>
 a06:	9a 01       	movw	r18, r20
 a08:	f8 01       	movw	r30, r16
 a0a:	e2 0f       	add	r30, r18
 a0c:	f3 1f       	adc	r31, r19
 a0e:	10 82       	st	Z, r1
 a10:	2e 96       	adiw	r28, 0x0e	; 14
 a12:	e4 e0       	ldi	r30, 0x04	; 4
 a14:	0c 94 c7 07 	jmp	0xf8e	; 0xf8e <__epilogue_restores__+0x1c>

00000a18 <vfprintf>:
 a18:	ab e0       	ldi	r26, 0x0B	; 11
 a1a:	b0 e0       	ldi	r27, 0x00	; 0
 a1c:	e2 e1       	ldi	r30, 0x12	; 18
 a1e:	f5 e0       	ldi	r31, 0x05	; 5
 a20:	0c 94 9d 07 	jmp	0xf3a	; 0xf3a <__prologue_saves__>
 a24:	6c 01       	movw	r12, r24
 a26:	7b 01       	movw	r14, r22
 a28:	8a 01       	movw	r16, r20
 a2a:	fc 01       	movw	r30, r24
 a2c:	17 82       	std	Z+7, r1	; 0x07
 a2e:	16 82       	std	Z+6, r1	; 0x06
 a30:	83 81       	ldd	r24, Z+3	; 0x03
 a32:	81 ff       	sbrs	r24, 1
 a34:	cc c1       	rjmp	.+920    	; 0xdce <vfprintf+0x3b6>
 a36:	ce 01       	movw	r24, r28
 a38:	01 96       	adiw	r24, 0x01	; 1
 a3a:	3c 01       	movw	r6, r24
 a3c:	f6 01       	movw	r30, r12
 a3e:	93 81       	ldd	r25, Z+3	; 0x03
 a40:	f7 01       	movw	r30, r14
 a42:	93 fd       	sbrc	r25, 3
 a44:	85 91       	lpm	r24, Z+
 a46:	93 ff       	sbrs	r25, 3
 a48:	81 91       	ld	r24, Z+
 a4a:	7f 01       	movw	r14, r30
 a4c:	88 23       	and	r24, r24
 a4e:	09 f4       	brne	.+2      	; 0xa52 <vfprintf+0x3a>
 a50:	ba c1       	rjmp	.+884    	; 0xdc6 <vfprintf+0x3ae>
 a52:	85 32       	cpi	r24, 0x25	; 37
 a54:	39 f4       	brne	.+14     	; 0xa64 <vfprintf+0x4c>
 a56:	93 fd       	sbrc	r25, 3
 a58:	85 91       	lpm	r24, Z+
 a5a:	93 ff       	sbrs	r25, 3
 a5c:	81 91       	ld	r24, Z+
 a5e:	7f 01       	movw	r14, r30
 a60:	85 32       	cpi	r24, 0x25	; 37
 a62:	29 f4       	brne	.+10     	; 0xa6e <vfprintf+0x56>
 a64:	b6 01       	movw	r22, r12
 a66:	90 e0       	ldi	r25, 0x00	; 0
 a68:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 a6c:	e7 cf       	rjmp	.-50     	; 0xa3c <vfprintf+0x24>
 a6e:	91 2c       	mov	r9, r1
 a70:	21 2c       	mov	r2, r1
 a72:	31 2c       	mov	r3, r1
 a74:	ff e1       	ldi	r31, 0x1F	; 31
 a76:	f3 15       	cp	r31, r3
 a78:	d8 f0       	brcs	.+54     	; 0xab0 <vfprintf+0x98>
 a7a:	8b 32       	cpi	r24, 0x2B	; 43
 a7c:	79 f0       	breq	.+30     	; 0xa9c <vfprintf+0x84>
 a7e:	38 f4       	brcc	.+14     	; 0xa8e <vfprintf+0x76>
 a80:	80 32       	cpi	r24, 0x20	; 32
 a82:	79 f0       	breq	.+30     	; 0xaa2 <vfprintf+0x8a>
 a84:	83 32       	cpi	r24, 0x23	; 35
 a86:	a1 f4       	brne	.+40     	; 0xab0 <vfprintf+0x98>
 a88:	23 2d       	mov	r18, r3
 a8a:	20 61       	ori	r18, 0x10	; 16
 a8c:	1d c0       	rjmp	.+58     	; 0xac8 <vfprintf+0xb0>
 a8e:	8d 32       	cpi	r24, 0x2D	; 45
 a90:	61 f0       	breq	.+24     	; 0xaaa <vfprintf+0x92>
 a92:	80 33       	cpi	r24, 0x30	; 48
 a94:	69 f4       	brne	.+26     	; 0xab0 <vfprintf+0x98>
 a96:	23 2d       	mov	r18, r3
 a98:	21 60       	ori	r18, 0x01	; 1
 a9a:	16 c0       	rjmp	.+44     	; 0xac8 <vfprintf+0xb0>
 a9c:	83 2d       	mov	r24, r3
 a9e:	82 60       	ori	r24, 0x02	; 2
 aa0:	38 2e       	mov	r3, r24
 aa2:	e3 2d       	mov	r30, r3
 aa4:	e4 60       	ori	r30, 0x04	; 4
 aa6:	3e 2e       	mov	r3, r30
 aa8:	2a c0       	rjmp	.+84     	; 0xafe <vfprintf+0xe6>
 aaa:	f3 2d       	mov	r31, r3
 aac:	f8 60       	ori	r31, 0x08	; 8
 aae:	1d c0       	rjmp	.+58     	; 0xaea <vfprintf+0xd2>
 ab0:	37 fc       	sbrc	r3, 7
 ab2:	2d c0       	rjmp	.+90     	; 0xb0e <vfprintf+0xf6>
 ab4:	20 ed       	ldi	r18, 0xD0	; 208
 ab6:	28 0f       	add	r18, r24
 ab8:	2a 30       	cpi	r18, 0x0A	; 10
 aba:	40 f0       	brcs	.+16     	; 0xacc <vfprintf+0xb4>
 abc:	8e 32       	cpi	r24, 0x2E	; 46
 abe:	b9 f4       	brne	.+46     	; 0xaee <vfprintf+0xd6>
 ac0:	36 fc       	sbrc	r3, 6
 ac2:	81 c1       	rjmp	.+770    	; 0xdc6 <vfprintf+0x3ae>
 ac4:	23 2d       	mov	r18, r3
 ac6:	20 64       	ori	r18, 0x40	; 64
 ac8:	32 2e       	mov	r3, r18
 aca:	19 c0       	rjmp	.+50     	; 0xafe <vfprintf+0xe6>
 acc:	36 fe       	sbrs	r3, 6
 ace:	06 c0       	rjmp	.+12     	; 0xadc <vfprintf+0xc4>
 ad0:	8a e0       	ldi	r24, 0x0A	; 10
 ad2:	98 9e       	mul	r9, r24
 ad4:	20 0d       	add	r18, r0
 ad6:	11 24       	eor	r1, r1
 ad8:	92 2e       	mov	r9, r18
 ada:	11 c0       	rjmp	.+34     	; 0xafe <vfprintf+0xe6>
 adc:	ea e0       	ldi	r30, 0x0A	; 10
 ade:	2e 9e       	mul	r2, r30
 ae0:	20 0d       	add	r18, r0
 ae2:	11 24       	eor	r1, r1
 ae4:	22 2e       	mov	r2, r18
 ae6:	f3 2d       	mov	r31, r3
 ae8:	f0 62       	ori	r31, 0x20	; 32
 aea:	3f 2e       	mov	r3, r31
 aec:	08 c0       	rjmp	.+16     	; 0xafe <vfprintf+0xe6>
 aee:	8c 36       	cpi	r24, 0x6C	; 108
 af0:	21 f4       	brne	.+8      	; 0xafa <vfprintf+0xe2>
 af2:	83 2d       	mov	r24, r3
 af4:	80 68       	ori	r24, 0x80	; 128
 af6:	38 2e       	mov	r3, r24
 af8:	02 c0       	rjmp	.+4      	; 0xafe <vfprintf+0xe6>
 afa:	88 36       	cpi	r24, 0x68	; 104
 afc:	41 f4       	brne	.+16     	; 0xb0e <vfprintf+0xf6>
 afe:	f7 01       	movw	r30, r14
 b00:	93 fd       	sbrc	r25, 3
 b02:	85 91       	lpm	r24, Z+
 b04:	93 ff       	sbrs	r25, 3
 b06:	81 91       	ld	r24, Z+
 b08:	7f 01       	movw	r14, r30
 b0a:	81 11       	cpse	r24, r1
 b0c:	b3 cf       	rjmp	.-154    	; 0xa74 <vfprintf+0x5c>
 b0e:	98 2f       	mov	r25, r24
 b10:	9f 7d       	andi	r25, 0xDF	; 223
 b12:	95 54       	subi	r25, 0x45	; 69
 b14:	93 30       	cpi	r25, 0x03	; 3
 b16:	28 f4       	brcc	.+10     	; 0xb22 <vfprintf+0x10a>
 b18:	0c 5f       	subi	r16, 0xFC	; 252
 b1a:	1f 4f       	sbci	r17, 0xFF	; 255
 b1c:	9f e3       	ldi	r25, 0x3F	; 63
 b1e:	99 83       	std	Y+1, r25	; 0x01
 b20:	0d c0       	rjmp	.+26     	; 0xb3c <vfprintf+0x124>
 b22:	83 36       	cpi	r24, 0x63	; 99
 b24:	31 f0       	breq	.+12     	; 0xb32 <vfprintf+0x11a>
 b26:	83 37       	cpi	r24, 0x73	; 115
 b28:	71 f0       	breq	.+28     	; 0xb46 <vfprintf+0x12e>
 b2a:	83 35       	cpi	r24, 0x53	; 83
 b2c:	09 f0       	breq	.+2      	; 0xb30 <vfprintf+0x118>
 b2e:	59 c0       	rjmp	.+178    	; 0xbe2 <vfprintf+0x1ca>
 b30:	21 c0       	rjmp	.+66     	; 0xb74 <vfprintf+0x15c>
 b32:	f8 01       	movw	r30, r16
 b34:	80 81       	ld	r24, Z
 b36:	89 83       	std	Y+1, r24	; 0x01
 b38:	0e 5f       	subi	r16, 0xFE	; 254
 b3a:	1f 4f       	sbci	r17, 0xFF	; 255
 b3c:	88 24       	eor	r8, r8
 b3e:	83 94       	inc	r8
 b40:	91 2c       	mov	r9, r1
 b42:	53 01       	movw	r10, r6
 b44:	13 c0       	rjmp	.+38     	; 0xb6c <vfprintf+0x154>
 b46:	28 01       	movw	r4, r16
 b48:	f2 e0       	ldi	r31, 0x02	; 2
 b4a:	4f 0e       	add	r4, r31
 b4c:	51 1c       	adc	r5, r1
 b4e:	f8 01       	movw	r30, r16
 b50:	a0 80       	ld	r10, Z
 b52:	b1 80       	ldd	r11, Z+1	; 0x01
 b54:	36 fe       	sbrs	r3, 6
 b56:	03 c0       	rjmp	.+6      	; 0xb5e <vfprintf+0x146>
 b58:	69 2d       	mov	r22, r9
 b5a:	70 e0       	ldi	r23, 0x00	; 0
 b5c:	02 c0       	rjmp	.+4      	; 0xb62 <vfprintf+0x14a>
 b5e:	6f ef       	ldi	r22, 0xFF	; 255
 b60:	7f ef       	ldi	r23, 0xFF	; 255
 b62:	c5 01       	movw	r24, r10
 b64:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <strnlen>
 b68:	4c 01       	movw	r8, r24
 b6a:	82 01       	movw	r16, r4
 b6c:	f3 2d       	mov	r31, r3
 b6e:	ff 77       	andi	r31, 0x7F	; 127
 b70:	3f 2e       	mov	r3, r31
 b72:	16 c0       	rjmp	.+44     	; 0xba0 <vfprintf+0x188>
 b74:	28 01       	movw	r4, r16
 b76:	22 e0       	ldi	r18, 0x02	; 2
 b78:	42 0e       	add	r4, r18
 b7a:	51 1c       	adc	r5, r1
 b7c:	f8 01       	movw	r30, r16
 b7e:	a0 80       	ld	r10, Z
 b80:	b1 80       	ldd	r11, Z+1	; 0x01
 b82:	36 fe       	sbrs	r3, 6
 b84:	03 c0       	rjmp	.+6      	; 0xb8c <vfprintf+0x174>
 b86:	69 2d       	mov	r22, r9
 b88:	70 e0       	ldi	r23, 0x00	; 0
 b8a:	02 c0       	rjmp	.+4      	; 0xb90 <vfprintf+0x178>
 b8c:	6f ef       	ldi	r22, 0xFF	; 255
 b8e:	7f ef       	ldi	r23, 0xFF	; 255
 b90:	c5 01       	movw	r24, r10
 b92:	0e 94 ed 06 	call	0xdda	; 0xdda <strnlen_P>
 b96:	4c 01       	movw	r8, r24
 b98:	f3 2d       	mov	r31, r3
 b9a:	f0 68       	ori	r31, 0x80	; 128
 b9c:	3f 2e       	mov	r3, r31
 b9e:	82 01       	movw	r16, r4
 ba0:	33 fc       	sbrc	r3, 3
 ba2:	1b c0       	rjmp	.+54     	; 0xbda <vfprintf+0x1c2>
 ba4:	82 2d       	mov	r24, r2
 ba6:	90 e0       	ldi	r25, 0x00	; 0
 ba8:	88 16       	cp	r8, r24
 baa:	99 06       	cpc	r9, r25
 bac:	b0 f4       	brcc	.+44     	; 0xbda <vfprintf+0x1c2>
 bae:	b6 01       	movw	r22, r12
 bb0:	80 e2       	ldi	r24, 0x20	; 32
 bb2:	90 e0       	ldi	r25, 0x00	; 0
 bb4:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 bb8:	2a 94       	dec	r2
 bba:	f4 cf       	rjmp	.-24     	; 0xba4 <vfprintf+0x18c>
 bbc:	f5 01       	movw	r30, r10
 bbe:	37 fc       	sbrc	r3, 7
 bc0:	85 91       	lpm	r24, Z+
 bc2:	37 fe       	sbrs	r3, 7
 bc4:	81 91       	ld	r24, Z+
 bc6:	5f 01       	movw	r10, r30
 bc8:	b6 01       	movw	r22, r12
 bca:	90 e0       	ldi	r25, 0x00	; 0
 bcc:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 bd0:	21 10       	cpse	r2, r1
 bd2:	2a 94       	dec	r2
 bd4:	21 e0       	ldi	r18, 0x01	; 1
 bd6:	82 1a       	sub	r8, r18
 bd8:	91 08       	sbc	r9, r1
 bda:	81 14       	cp	r8, r1
 bdc:	91 04       	cpc	r9, r1
 bde:	71 f7       	brne	.-36     	; 0xbbc <vfprintf+0x1a4>
 be0:	e8 c0       	rjmp	.+464    	; 0xdb2 <vfprintf+0x39a>
 be2:	84 36       	cpi	r24, 0x64	; 100
 be4:	11 f0       	breq	.+4      	; 0xbea <vfprintf+0x1d2>
 be6:	89 36       	cpi	r24, 0x69	; 105
 be8:	41 f5       	brne	.+80     	; 0xc3a <vfprintf+0x222>
 bea:	f8 01       	movw	r30, r16
 bec:	37 fe       	sbrs	r3, 7
 bee:	07 c0       	rjmp	.+14     	; 0xbfe <vfprintf+0x1e6>
 bf0:	60 81       	ld	r22, Z
 bf2:	71 81       	ldd	r23, Z+1	; 0x01
 bf4:	82 81       	ldd	r24, Z+2	; 0x02
 bf6:	93 81       	ldd	r25, Z+3	; 0x03
 bf8:	0c 5f       	subi	r16, 0xFC	; 252
 bfa:	1f 4f       	sbci	r17, 0xFF	; 255
 bfc:	08 c0       	rjmp	.+16     	; 0xc0e <vfprintf+0x1f6>
 bfe:	60 81       	ld	r22, Z
 c00:	71 81       	ldd	r23, Z+1	; 0x01
 c02:	07 2e       	mov	r0, r23
 c04:	00 0c       	add	r0, r0
 c06:	88 0b       	sbc	r24, r24
 c08:	99 0b       	sbc	r25, r25
 c0a:	0e 5f       	subi	r16, 0xFE	; 254
 c0c:	1f 4f       	sbci	r17, 0xFF	; 255
 c0e:	f3 2d       	mov	r31, r3
 c10:	ff 76       	andi	r31, 0x6F	; 111
 c12:	3f 2e       	mov	r3, r31
 c14:	97 ff       	sbrs	r25, 7
 c16:	09 c0       	rjmp	.+18     	; 0xc2a <vfprintf+0x212>
 c18:	90 95       	com	r25
 c1a:	80 95       	com	r24
 c1c:	70 95       	com	r23
 c1e:	61 95       	neg	r22
 c20:	7f 4f       	sbci	r23, 0xFF	; 255
 c22:	8f 4f       	sbci	r24, 0xFF	; 255
 c24:	9f 4f       	sbci	r25, 0xFF	; 255
 c26:	f0 68       	ori	r31, 0x80	; 128
 c28:	3f 2e       	mov	r3, r31
 c2a:	2a e0       	ldi	r18, 0x0A	; 10
 c2c:	30 e0       	ldi	r19, 0x00	; 0
 c2e:	a3 01       	movw	r20, r6
 c30:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__ultoa_invert>
 c34:	88 2e       	mov	r8, r24
 c36:	86 18       	sub	r8, r6
 c38:	45 c0       	rjmp	.+138    	; 0xcc4 <vfprintf+0x2ac>
 c3a:	85 37       	cpi	r24, 0x75	; 117
 c3c:	31 f4       	brne	.+12     	; 0xc4a <vfprintf+0x232>
 c3e:	23 2d       	mov	r18, r3
 c40:	2f 7e       	andi	r18, 0xEF	; 239
 c42:	b2 2e       	mov	r11, r18
 c44:	2a e0       	ldi	r18, 0x0A	; 10
 c46:	30 e0       	ldi	r19, 0x00	; 0
 c48:	25 c0       	rjmp	.+74     	; 0xc94 <vfprintf+0x27c>
 c4a:	93 2d       	mov	r25, r3
 c4c:	99 7f       	andi	r25, 0xF9	; 249
 c4e:	b9 2e       	mov	r11, r25
 c50:	8f 36       	cpi	r24, 0x6F	; 111
 c52:	c1 f0       	breq	.+48     	; 0xc84 <vfprintf+0x26c>
 c54:	18 f4       	brcc	.+6      	; 0xc5c <vfprintf+0x244>
 c56:	88 35       	cpi	r24, 0x58	; 88
 c58:	79 f0       	breq	.+30     	; 0xc78 <vfprintf+0x260>
 c5a:	b5 c0       	rjmp	.+362    	; 0xdc6 <vfprintf+0x3ae>
 c5c:	80 37       	cpi	r24, 0x70	; 112
 c5e:	19 f0       	breq	.+6      	; 0xc66 <vfprintf+0x24e>
 c60:	88 37       	cpi	r24, 0x78	; 120
 c62:	21 f0       	breq	.+8      	; 0xc6c <vfprintf+0x254>
 c64:	b0 c0       	rjmp	.+352    	; 0xdc6 <vfprintf+0x3ae>
 c66:	e9 2f       	mov	r30, r25
 c68:	e0 61       	ori	r30, 0x10	; 16
 c6a:	be 2e       	mov	r11, r30
 c6c:	b4 fe       	sbrs	r11, 4
 c6e:	0d c0       	rjmp	.+26     	; 0xc8a <vfprintf+0x272>
 c70:	fb 2d       	mov	r31, r11
 c72:	f4 60       	ori	r31, 0x04	; 4
 c74:	bf 2e       	mov	r11, r31
 c76:	09 c0       	rjmp	.+18     	; 0xc8a <vfprintf+0x272>
 c78:	34 fe       	sbrs	r3, 4
 c7a:	0a c0       	rjmp	.+20     	; 0xc90 <vfprintf+0x278>
 c7c:	29 2f       	mov	r18, r25
 c7e:	26 60       	ori	r18, 0x06	; 6
 c80:	b2 2e       	mov	r11, r18
 c82:	06 c0       	rjmp	.+12     	; 0xc90 <vfprintf+0x278>
 c84:	28 e0       	ldi	r18, 0x08	; 8
 c86:	30 e0       	ldi	r19, 0x00	; 0
 c88:	05 c0       	rjmp	.+10     	; 0xc94 <vfprintf+0x27c>
 c8a:	20 e1       	ldi	r18, 0x10	; 16
 c8c:	30 e0       	ldi	r19, 0x00	; 0
 c8e:	02 c0       	rjmp	.+4      	; 0xc94 <vfprintf+0x27c>
 c90:	20 e1       	ldi	r18, 0x10	; 16
 c92:	32 e0       	ldi	r19, 0x02	; 2
 c94:	f8 01       	movw	r30, r16
 c96:	b7 fe       	sbrs	r11, 7
 c98:	07 c0       	rjmp	.+14     	; 0xca8 <vfprintf+0x290>
 c9a:	60 81       	ld	r22, Z
 c9c:	71 81       	ldd	r23, Z+1	; 0x01
 c9e:	82 81       	ldd	r24, Z+2	; 0x02
 ca0:	93 81       	ldd	r25, Z+3	; 0x03
 ca2:	0c 5f       	subi	r16, 0xFC	; 252
 ca4:	1f 4f       	sbci	r17, 0xFF	; 255
 ca6:	06 c0       	rjmp	.+12     	; 0xcb4 <vfprintf+0x29c>
 ca8:	60 81       	ld	r22, Z
 caa:	71 81       	ldd	r23, Z+1	; 0x01
 cac:	80 e0       	ldi	r24, 0x00	; 0
 cae:	90 e0       	ldi	r25, 0x00	; 0
 cb0:	0e 5f       	subi	r16, 0xFE	; 254
 cb2:	1f 4f       	sbci	r17, 0xFF	; 255
 cb4:	a3 01       	movw	r20, r6
 cb6:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__ultoa_invert>
 cba:	88 2e       	mov	r8, r24
 cbc:	86 18       	sub	r8, r6
 cbe:	fb 2d       	mov	r31, r11
 cc0:	ff 77       	andi	r31, 0x7F	; 127
 cc2:	3f 2e       	mov	r3, r31
 cc4:	36 fe       	sbrs	r3, 6
 cc6:	0d c0       	rjmp	.+26     	; 0xce2 <vfprintf+0x2ca>
 cc8:	23 2d       	mov	r18, r3
 cca:	2e 7f       	andi	r18, 0xFE	; 254
 ccc:	a2 2e       	mov	r10, r18
 cce:	89 14       	cp	r8, r9
 cd0:	58 f4       	brcc	.+22     	; 0xce8 <vfprintf+0x2d0>
 cd2:	34 fe       	sbrs	r3, 4
 cd4:	0b c0       	rjmp	.+22     	; 0xcec <vfprintf+0x2d4>
 cd6:	32 fc       	sbrc	r3, 2
 cd8:	09 c0       	rjmp	.+18     	; 0xcec <vfprintf+0x2d4>
 cda:	83 2d       	mov	r24, r3
 cdc:	8e 7e       	andi	r24, 0xEE	; 238
 cde:	a8 2e       	mov	r10, r24
 ce0:	05 c0       	rjmp	.+10     	; 0xcec <vfprintf+0x2d4>
 ce2:	b8 2c       	mov	r11, r8
 ce4:	a3 2c       	mov	r10, r3
 ce6:	03 c0       	rjmp	.+6      	; 0xcee <vfprintf+0x2d6>
 ce8:	b8 2c       	mov	r11, r8
 cea:	01 c0       	rjmp	.+2      	; 0xcee <vfprintf+0x2d6>
 cec:	b9 2c       	mov	r11, r9
 cee:	a4 fe       	sbrs	r10, 4
 cf0:	0f c0       	rjmp	.+30     	; 0xd10 <vfprintf+0x2f8>
 cf2:	fe 01       	movw	r30, r28
 cf4:	e8 0d       	add	r30, r8
 cf6:	f1 1d       	adc	r31, r1
 cf8:	80 81       	ld	r24, Z
 cfa:	80 33       	cpi	r24, 0x30	; 48
 cfc:	21 f4       	brne	.+8      	; 0xd06 <vfprintf+0x2ee>
 cfe:	9a 2d       	mov	r25, r10
 d00:	99 7e       	andi	r25, 0xE9	; 233
 d02:	a9 2e       	mov	r10, r25
 d04:	09 c0       	rjmp	.+18     	; 0xd18 <vfprintf+0x300>
 d06:	a2 fe       	sbrs	r10, 2
 d08:	06 c0       	rjmp	.+12     	; 0xd16 <vfprintf+0x2fe>
 d0a:	b3 94       	inc	r11
 d0c:	b3 94       	inc	r11
 d0e:	04 c0       	rjmp	.+8      	; 0xd18 <vfprintf+0x300>
 d10:	8a 2d       	mov	r24, r10
 d12:	86 78       	andi	r24, 0x86	; 134
 d14:	09 f0       	breq	.+2      	; 0xd18 <vfprintf+0x300>
 d16:	b3 94       	inc	r11
 d18:	a3 fc       	sbrc	r10, 3
 d1a:	11 c0       	rjmp	.+34     	; 0xd3e <vfprintf+0x326>
 d1c:	a0 fe       	sbrs	r10, 0
 d1e:	06 c0       	rjmp	.+12     	; 0xd2c <vfprintf+0x314>
 d20:	b2 14       	cp	r11, r2
 d22:	88 f4       	brcc	.+34     	; 0xd46 <vfprintf+0x32e>
 d24:	28 0c       	add	r2, r8
 d26:	92 2c       	mov	r9, r2
 d28:	9b 18       	sub	r9, r11
 d2a:	0e c0       	rjmp	.+28     	; 0xd48 <vfprintf+0x330>
 d2c:	b2 14       	cp	r11, r2
 d2e:	60 f4       	brcc	.+24     	; 0xd48 <vfprintf+0x330>
 d30:	b6 01       	movw	r22, r12
 d32:	80 e2       	ldi	r24, 0x20	; 32
 d34:	90 e0       	ldi	r25, 0x00	; 0
 d36:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 d3a:	b3 94       	inc	r11
 d3c:	f7 cf       	rjmp	.-18     	; 0xd2c <vfprintf+0x314>
 d3e:	b2 14       	cp	r11, r2
 d40:	18 f4       	brcc	.+6      	; 0xd48 <vfprintf+0x330>
 d42:	2b 18       	sub	r2, r11
 d44:	02 c0       	rjmp	.+4      	; 0xd4a <vfprintf+0x332>
 d46:	98 2c       	mov	r9, r8
 d48:	21 2c       	mov	r2, r1
 d4a:	a4 fe       	sbrs	r10, 4
 d4c:	10 c0       	rjmp	.+32     	; 0xd6e <vfprintf+0x356>
 d4e:	b6 01       	movw	r22, r12
 d50:	80 e3       	ldi	r24, 0x30	; 48
 d52:	90 e0       	ldi	r25, 0x00	; 0
 d54:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 d58:	a2 fe       	sbrs	r10, 2
 d5a:	17 c0       	rjmp	.+46     	; 0xd8a <vfprintf+0x372>
 d5c:	a1 fc       	sbrc	r10, 1
 d5e:	03 c0       	rjmp	.+6      	; 0xd66 <vfprintf+0x34e>
 d60:	88 e7       	ldi	r24, 0x78	; 120
 d62:	90 e0       	ldi	r25, 0x00	; 0
 d64:	02 c0       	rjmp	.+4      	; 0xd6a <vfprintf+0x352>
 d66:	88 e5       	ldi	r24, 0x58	; 88
 d68:	90 e0       	ldi	r25, 0x00	; 0
 d6a:	b6 01       	movw	r22, r12
 d6c:	0c c0       	rjmp	.+24     	; 0xd86 <vfprintf+0x36e>
 d6e:	8a 2d       	mov	r24, r10
 d70:	86 78       	andi	r24, 0x86	; 134
 d72:	59 f0       	breq	.+22     	; 0xd8a <vfprintf+0x372>
 d74:	a1 fe       	sbrs	r10, 1
 d76:	02 c0       	rjmp	.+4      	; 0xd7c <vfprintf+0x364>
 d78:	8b e2       	ldi	r24, 0x2B	; 43
 d7a:	01 c0       	rjmp	.+2      	; 0xd7e <vfprintf+0x366>
 d7c:	80 e2       	ldi	r24, 0x20	; 32
 d7e:	a7 fc       	sbrc	r10, 7
 d80:	8d e2       	ldi	r24, 0x2D	; 45
 d82:	b6 01       	movw	r22, r12
 d84:	90 e0       	ldi	r25, 0x00	; 0
 d86:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 d8a:	89 14       	cp	r8, r9
 d8c:	38 f4       	brcc	.+14     	; 0xd9c <vfprintf+0x384>
 d8e:	b6 01       	movw	r22, r12
 d90:	80 e3       	ldi	r24, 0x30	; 48
 d92:	90 e0       	ldi	r25, 0x00	; 0
 d94:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 d98:	9a 94       	dec	r9
 d9a:	f7 cf       	rjmp	.-18     	; 0xd8a <vfprintf+0x372>
 d9c:	8a 94       	dec	r8
 d9e:	f3 01       	movw	r30, r6
 da0:	e8 0d       	add	r30, r8
 da2:	f1 1d       	adc	r31, r1
 da4:	80 81       	ld	r24, Z
 da6:	b6 01       	movw	r22, r12
 da8:	90 e0       	ldi	r25, 0x00	; 0
 daa:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 dae:	81 10       	cpse	r8, r1
 db0:	f5 cf       	rjmp	.-22     	; 0xd9c <vfprintf+0x384>
 db2:	22 20       	and	r2, r2
 db4:	09 f4       	brne	.+2      	; 0xdb8 <vfprintf+0x3a0>
 db6:	42 ce       	rjmp	.-892    	; 0xa3c <vfprintf+0x24>
 db8:	b6 01       	movw	r22, r12
 dba:	80 e2       	ldi	r24, 0x20	; 32
 dbc:	90 e0       	ldi	r25, 0x00	; 0
 dbe:	0e 94 03 07 	call	0xe06	; 0xe06 <fputc>
 dc2:	2a 94       	dec	r2
 dc4:	f6 cf       	rjmp	.-20     	; 0xdb2 <vfprintf+0x39a>
 dc6:	f6 01       	movw	r30, r12
 dc8:	86 81       	ldd	r24, Z+6	; 0x06
 dca:	97 81       	ldd	r25, Z+7	; 0x07
 dcc:	02 c0       	rjmp	.+4      	; 0xdd2 <vfprintf+0x3ba>
 dce:	8f ef       	ldi	r24, 0xFF	; 255
 dd0:	9f ef       	ldi	r25, 0xFF	; 255
 dd2:	2b 96       	adiw	r28, 0x0b	; 11
 dd4:	e2 e1       	ldi	r30, 0x12	; 18
 dd6:	0c 94 b9 07 	jmp	0xf72	; 0xf72 <__epilogue_restores__>

00000dda <strnlen_P>:
 dda:	fc 01       	movw	r30, r24
 ddc:	05 90       	lpm	r0, Z+
 dde:	61 50       	subi	r22, 0x01	; 1
 de0:	70 40       	sbci	r23, 0x00	; 0
 de2:	01 10       	cpse	r0, r1
 de4:	d8 f7       	brcc	.-10     	; 0xddc <strnlen_P+0x2>
 de6:	80 95       	com	r24
 de8:	90 95       	com	r25
 dea:	8e 0f       	add	r24, r30
 dec:	9f 1f       	adc	r25, r31
 dee:	08 95       	ret

00000df0 <strnlen>:
 df0:	fc 01       	movw	r30, r24
 df2:	61 50       	subi	r22, 0x01	; 1
 df4:	70 40       	sbci	r23, 0x00	; 0
 df6:	01 90       	ld	r0, Z+
 df8:	01 10       	cpse	r0, r1
 dfa:	d8 f7       	brcc	.-10     	; 0xdf2 <strnlen+0x2>
 dfc:	80 95       	com	r24
 dfe:	90 95       	com	r25
 e00:	8e 0f       	add	r24, r30
 e02:	9f 1f       	adc	r25, r31
 e04:	08 95       	ret

00000e06 <fputc>:
 e06:	0f 93       	push	r16
 e08:	1f 93       	push	r17
 e0a:	cf 93       	push	r28
 e0c:	df 93       	push	r29
 e0e:	fb 01       	movw	r30, r22
 e10:	23 81       	ldd	r18, Z+3	; 0x03
 e12:	21 fd       	sbrc	r18, 1
 e14:	03 c0       	rjmp	.+6      	; 0xe1c <fputc+0x16>
 e16:	8f ef       	ldi	r24, 0xFF	; 255
 e18:	9f ef       	ldi	r25, 0xFF	; 255
 e1a:	2c c0       	rjmp	.+88     	; 0xe74 <fputc+0x6e>
 e1c:	22 ff       	sbrs	r18, 2
 e1e:	16 c0       	rjmp	.+44     	; 0xe4c <fputc+0x46>
 e20:	46 81       	ldd	r20, Z+6	; 0x06
 e22:	57 81       	ldd	r21, Z+7	; 0x07
 e24:	24 81       	ldd	r18, Z+4	; 0x04
 e26:	35 81       	ldd	r19, Z+5	; 0x05
 e28:	42 17       	cp	r20, r18
 e2a:	53 07       	cpc	r21, r19
 e2c:	44 f4       	brge	.+16     	; 0xe3e <fputc+0x38>
 e2e:	a0 81       	ld	r26, Z
 e30:	b1 81       	ldd	r27, Z+1	; 0x01
 e32:	9d 01       	movw	r18, r26
 e34:	2f 5f       	subi	r18, 0xFF	; 255
 e36:	3f 4f       	sbci	r19, 0xFF	; 255
 e38:	31 83       	std	Z+1, r19	; 0x01
 e3a:	20 83       	st	Z, r18
 e3c:	8c 93       	st	X, r24
 e3e:	26 81       	ldd	r18, Z+6	; 0x06
 e40:	37 81       	ldd	r19, Z+7	; 0x07
 e42:	2f 5f       	subi	r18, 0xFF	; 255
 e44:	3f 4f       	sbci	r19, 0xFF	; 255
 e46:	37 83       	std	Z+7, r19	; 0x07
 e48:	26 83       	std	Z+6, r18	; 0x06
 e4a:	14 c0       	rjmp	.+40     	; 0xe74 <fputc+0x6e>
 e4c:	8b 01       	movw	r16, r22
 e4e:	ec 01       	movw	r28, r24
 e50:	fb 01       	movw	r30, r22
 e52:	00 84       	ldd	r0, Z+8	; 0x08
 e54:	f1 85       	ldd	r31, Z+9	; 0x09
 e56:	e0 2d       	mov	r30, r0
 e58:	09 95       	icall
 e5a:	89 2b       	or	r24, r25
 e5c:	e1 f6       	brne	.-72     	; 0xe16 <fputc+0x10>
 e5e:	d8 01       	movw	r26, r16
 e60:	16 96       	adiw	r26, 0x06	; 6
 e62:	8d 91       	ld	r24, X+
 e64:	9c 91       	ld	r25, X
 e66:	17 97       	sbiw	r26, 0x07	; 7
 e68:	01 96       	adiw	r24, 0x01	; 1
 e6a:	17 96       	adiw	r26, 0x07	; 7
 e6c:	9c 93       	st	X, r25
 e6e:	8e 93       	st	-X, r24
 e70:	16 97       	sbiw	r26, 0x06	; 6
 e72:	ce 01       	movw	r24, r28
 e74:	df 91       	pop	r29
 e76:	cf 91       	pop	r28
 e78:	1f 91       	pop	r17
 e7a:	0f 91       	pop	r16
 e7c:	08 95       	ret

00000e7e <__ultoa_invert>:
 e7e:	fa 01       	movw	r30, r20
 e80:	aa 27       	eor	r26, r26
 e82:	28 30       	cpi	r18, 0x08	; 8
 e84:	51 f1       	breq	.+84     	; 0xeda <__ultoa_invert+0x5c>
 e86:	20 31       	cpi	r18, 0x10	; 16
 e88:	81 f1       	breq	.+96     	; 0xeea <__ultoa_invert+0x6c>
 e8a:	e8 94       	clt
 e8c:	6f 93       	push	r22
 e8e:	6e 7f       	andi	r22, 0xFE	; 254
 e90:	6e 5f       	subi	r22, 0xFE	; 254
 e92:	7f 4f       	sbci	r23, 0xFF	; 255
 e94:	8f 4f       	sbci	r24, 0xFF	; 255
 e96:	9f 4f       	sbci	r25, 0xFF	; 255
 e98:	af 4f       	sbci	r26, 0xFF	; 255
 e9a:	b1 e0       	ldi	r27, 0x01	; 1
 e9c:	3e d0       	rcall	.+124    	; 0xf1a <__ultoa_invert+0x9c>
 e9e:	b4 e0       	ldi	r27, 0x04	; 4
 ea0:	3c d0       	rcall	.+120    	; 0xf1a <__ultoa_invert+0x9c>
 ea2:	67 0f       	add	r22, r23
 ea4:	78 1f       	adc	r23, r24
 ea6:	89 1f       	adc	r24, r25
 ea8:	9a 1f       	adc	r25, r26
 eaa:	a1 1d       	adc	r26, r1
 eac:	68 0f       	add	r22, r24
 eae:	79 1f       	adc	r23, r25
 eb0:	8a 1f       	adc	r24, r26
 eb2:	91 1d       	adc	r25, r1
 eb4:	a1 1d       	adc	r26, r1
 eb6:	6a 0f       	add	r22, r26
 eb8:	71 1d       	adc	r23, r1
 eba:	81 1d       	adc	r24, r1
 ebc:	91 1d       	adc	r25, r1
 ebe:	a1 1d       	adc	r26, r1
 ec0:	20 d0       	rcall	.+64     	; 0xf02 <__ultoa_invert+0x84>
 ec2:	09 f4       	brne	.+2      	; 0xec6 <__ultoa_invert+0x48>
 ec4:	68 94       	set
 ec6:	3f 91       	pop	r19
 ec8:	2a e0       	ldi	r18, 0x0A	; 10
 eca:	26 9f       	mul	r18, r22
 ecc:	11 24       	eor	r1, r1
 ece:	30 19       	sub	r19, r0
 ed0:	30 5d       	subi	r19, 0xD0	; 208
 ed2:	31 93       	st	Z+, r19
 ed4:	de f6       	brtc	.-74     	; 0xe8c <__ultoa_invert+0xe>
 ed6:	cf 01       	movw	r24, r30
 ed8:	08 95       	ret
 eda:	46 2f       	mov	r20, r22
 edc:	47 70       	andi	r20, 0x07	; 7
 ede:	40 5d       	subi	r20, 0xD0	; 208
 ee0:	41 93       	st	Z+, r20
 ee2:	b3 e0       	ldi	r27, 0x03	; 3
 ee4:	0f d0       	rcall	.+30     	; 0xf04 <__ultoa_invert+0x86>
 ee6:	c9 f7       	brne	.-14     	; 0xeda <__ultoa_invert+0x5c>
 ee8:	f6 cf       	rjmp	.-20     	; 0xed6 <__ultoa_invert+0x58>
 eea:	46 2f       	mov	r20, r22
 eec:	4f 70       	andi	r20, 0x0F	; 15
 eee:	40 5d       	subi	r20, 0xD0	; 208
 ef0:	4a 33       	cpi	r20, 0x3A	; 58
 ef2:	18 f0       	brcs	.+6      	; 0xefa <__ultoa_invert+0x7c>
 ef4:	49 5d       	subi	r20, 0xD9	; 217
 ef6:	31 fd       	sbrc	r19, 1
 ef8:	40 52       	subi	r20, 0x20	; 32
 efa:	41 93       	st	Z+, r20
 efc:	02 d0       	rcall	.+4      	; 0xf02 <__ultoa_invert+0x84>
 efe:	a9 f7       	brne	.-22     	; 0xeea <__ultoa_invert+0x6c>
 f00:	ea cf       	rjmp	.-44     	; 0xed6 <__ultoa_invert+0x58>
 f02:	b4 e0       	ldi	r27, 0x04	; 4
 f04:	a6 95       	lsr	r26
 f06:	97 95       	ror	r25
 f08:	87 95       	ror	r24
 f0a:	77 95       	ror	r23
 f0c:	67 95       	ror	r22
 f0e:	ba 95       	dec	r27
 f10:	c9 f7       	brne	.-14     	; 0xf04 <__ultoa_invert+0x86>
 f12:	00 97       	sbiw	r24, 0x00	; 0
 f14:	61 05       	cpc	r22, r1
 f16:	71 05       	cpc	r23, r1
 f18:	08 95       	ret
 f1a:	9b 01       	movw	r18, r22
 f1c:	ac 01       	movw	r20, r24
 f1e:	0a 2e       	mov	r0, r26
 f20:	06 94       	lsr	r0
 f22:	57 95       	ror	r21
 f24:	47 95       	ror	r20
 f26:	37 95       	ror	r19
 f28:	27 95       	ror	r18
 f2a:	ba 95       	dec	r27
 f2c:	c9 f7       	brne	.-14     	; 0xf20 <__ultoa_invert+0xa2>
 f2e:	62 0f       	add	r22, r18
 f30:	73 1f       	adc	r23, r19
 f32:	84 1f       	adc	r24, r20
 f34:	95 1f       	adc	r25, r21
 f36:	a0 1d       	adc	r26, r0
 f38:	08 95       	ret

00000f3a <__prologue_saves__>:
 f3a:	2f 92       	push	r2
 f3c:	3f 92       	push	r3
 f3e:	4f 92       	push	r4
 f40:	5f 92       	push	r5
 f42:	6f 92       	push	r6
 f44:	7f 92       	push	r7
 f46:	8f 92       	push	r8
 f48:	9f 92       	push	r9
 f4a:	af 92       	push	r10
 f4c:	bf 92       	push	r11
 f4e:	cf 92       	push	r12
 f50:	df 92       	push	r13
 f52:	ef 92       	push	r14
 f54:	ff 92       	push	r15
 f56:	0f 93       	push	r16
 f58:	1f 93       	push	r17
 f5a:	cf 93       	push	r28
 f5c:	df 93       	push	r29
 f5e:	cd b7       	in	r28, 0x3d	; 61
 f60:	de b7       	in	r29, 0x3e	; 62
 f62:	ca 1b       	sub	r28, r26
 f64:	db 0b       	sbc	r29, r27
 f66:	0f b6       	in	r0, 0x3f	; 63
 f68:	f8 94       	cli
 f6a:	de bf       	out	0x3e, r29	; 62
 f6c:	0f be       	out	0x3f, r0	; 63
 f6e:	cd bf       	out	0x3d, r28	; 61
 f70:	09 94       	ijmp

00000f72 <__epilogue_restores__>:
 f72:	2a 88       	ldd	r2, Y+18	; 0x12
 f74:	39 88       	ldd	r3, Y+17	; 0x11
 f76:	48 88       	ldd	r4, Y+16	; 0x10
 f78:	5f 84       	ldd	r5, Y+15	; 0x0f
 f7a:	6e 84       	ldd	r6, Y+14	; 0x0e
 f7c:	7d 84       	ldd	r7, Y+13	; 0x0d
 f7e:	8c 84       	ldd	r8, Y+12	; 0x0c
 f80:	9b 84       	ldd	r9, Y+11	; 0x0b
 f82:	aa 84       	ldd	r10, Y+10	; 0x0a
 f84:	b9 84       	ldd	r11, Y+9	; 0x09
 f86:	c8 84       	ldd	r12, Y+8	; 0x08
 f88:	df 80       	ldd	r13, Y+7	; 0x07
 f8a:	ee 80       	ldd	r14, Y+6	; 0x06
 f8c:	fd 80       	ldd	r15, Y+5	; 0x05
 f8e:	0c 81       	ldd	r16, Y+4	; 0x04
 f90:	1b 81       	ldd	r17, Y+3	; 0x03
 f92:	aa 81       	ldd	r26, Y+2	; 0x02
 f94:	b9 81       	ldd	r27, Y+1	; 0x01
 f96:	ce 0f       	add	r28, r30
 f98:	d1 1d       	adc	r29, r1
 f9a:	0f b6       	in	r0, 0x3f	; 63
 f9c:	f8 94       	cli
 f9e:	de bf       	out	0x3e, r29	; 62
 fa0:	0f be       	out	0x3f, r0	; 63
 fa2:	cd bf       	out	0x3d, r28	; 61
 fa4:	ed 01       	movw	r28, r26
 fa6:	08 95       	ret

00000fa8 <_exit>:
 fa8:	f8 94       	cli

00000faa <__stop_program>:
 faa:	ff cf       	rjmp	.-2      	; 0xfaa <__stop_program>
